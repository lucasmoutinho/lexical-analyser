// Gerado por GNU Bison 3.0.4.
// Relate erros para <bug-bison@gnu.org>.
// Site: <http://www.gnu.org/software/bison/>.

digraph "syntax.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . prog $end\l"]
  0 -> 1 [style=solid label="TYPE"]
  0 -> 2 [style=dashed label="prog"]
  0 -> 3 [style=dashed label="decl-list"]
  0 -> 4 [style=dashed label="var-decl"]
  0 -> 5 [style=dashed label="func"]
  1 [label="Estado 1\n\l  6 var-decl: TYPE . ID ';'\l  8 func: TYPE . ID $@1 '(' params ')' comp-stmt\l"]
  1 -> 6 [style=solid label="ID"]
  2 [label="Estado 2\n\l  0 $accept: prog . $end\l"]
  2 -> 7 [style=solid label="$end"]
  3 [label="Estado 3\n\l  1 prog: decl-list .\l  2 decl-list: decl-list . var-decl\l  4          | decl-list . func\l"]
  3 -> 1 [style=solid label="TYPE"]
  3 -> 8 [style=dashed label="var-decl"]
  3 -> 9 [style=dashed label="func"]
  3 -> "3R1" [style=solid]
 "3R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l  3 decl-list: var-decl .\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l  5 decl-list: func .\l"]
  5 -> "5R5" [style=solid]
 "5R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l  6 var-decl: TYPE ID . ';'\l  8 func: TYPE ID . $@1 '(' params ')' comp-stmt\l"]
  6 -> 10 [style=solid label="';'"]
  6 -> 11 [style=dashed label="$@1"]
  6 -> "6R7" [style=solid]
 "6R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l  0 $accept: prog $end .\l"]
  7 -> "7R0" [style=solid]
 "7R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  8 [label="Estado 8\n\l  2 decl-list: decl-list var-decl .\l"]
  8 -> "8R2" [style=solid]
 "8R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l  4 decl-list: decl-list func .\l"]
  9 -> "9R4" [style=solid]
 "9R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l  6 var-decl: TYPE ID ';' .\l"]
  10 -> "10R6" [style=solid]
 "10R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  11 [label="Estado 11\n\l  8 func: TYPE ID $@1 . '(' params ')' comp-stmt\l"]
  11 -> 12 [style=solid label="'('"]
  12 [label="Estado 12\n\l  8 func: TYPE ID $@1 '(' . params ')' comp-stmt\l"]
  12 -> 13 [style=solid label="TYPE"]
  12 -> 14 [style=dashed label="params"]
  12 -> "12R11" [style=solid]
 "12R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l 10 params: TYPE . ID\l"]
  13 -> 15 [style=solid label="ID"]
  14 [label="Estado 14\n\l  8 func: TYPE ID $@1 '(' params . ')' comp-stmt\l  9 params: params . ',' TYPE ID\l"]
  14 -> 16 [style=solid label="')'"]
  14 -> 17 [style=solid label="','"]
  15 [label="Estado 15\n\l 10 params: TYPE ID .\l"]
  15 -> "15R10" [style=solid]
 "15R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  16 [label="Estado 16\n\l  8 func: TYPE ID $@1 '(' params ')' . comp-stmt\l"]
  16 -> 18 [style=solid label="'{'"]
  16 -> 19 [style=dashed label="comp-stmt"]
  17 [label="Estado 17\n\l  9 params: params ',' . TYPE ID\l"]
  17 -> 20 [style=solid label="TYPE"]
  18 [label="Estado 18\n\l 12 comp-stmt: '{' . local-decl stmt-list '}'\l"]
  18 -> 21 [style=dashed label="local-decl"]
  18 -> "18R14" [style=solid]
 "18R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  19 [label="Estado 19\n\l  8 func: TYPE ID $@1 '(' params ')' comp-stmt .\l"]
  19 -> "19R8" [style=solid]
 "19R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  20 [label="Estado 20\n\l  9 params: params ',' TYPE . ID\l"]
  20 -> 22 [style=solid label="ID"]
  21 [label="Estado 21\n\l 12 comp-stmt: '{' local-decl . stmt-list '}'\l 13 local-decl: local-decl . TYPE ID ';'\l"]
  21 -> 23 [style=solid label="TYPE"]
  21 -> 24 [style=dashed label="stmt-list"]
  21 -> "21R16" [style=solid]
 "21R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  22 [label="Estado 22\n\l  9 params: params ',' TYPE ID .\l"]
  22 -> "22R9" [style=solid]
 "22R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  23 [label="Estado 23\n\l 13 local-decl: local-decl TYPE . ID ';'\l"]
  23 -> 25 [style=solid label="ID"]
  24 [label="Estado 24\n\l 12 comp-stmt: '{' local-decl stmt-list . '}'\l 15 stmt-list: stmt-list . stmt\l"]
  24 -> 26 [style=solid label="INT"]
  24 -> 27 [style=solid label="FLOAT"]
  24 -> 28 [style=solid label="BOOL"]
  24 -> 29 [style=solid label="ID"]
  24 -> 30 [style=solid label="IF"]
  24 -> 31 [style=solid label="WHILE"]
  24 -> 32 [style=solid label="RETURN"]
  24 -> 33 [style=solid label="PRINT"]
  24 -> 34 [style=solid label="SCAN"]
  24 -> 35 [style=solid label="STRUPPER"]
  24 -> 36 [style=solid label="STRLOWER"]
  24 -> 37 [style=solid label="STRCONCAT"]
  24 -> 38 [style=solid label="STRCOPY"]
  24 -> 39 [style=solid label="STRINSERT"]
  24 -> 40 [style=solid label="QUOTES"]
  24 -> 41 [style=solid label="'('"]
  24 -> 42 [style=solid label="'}'"]
  24 -> 43 [style=dashed label="stmt"]
  24 -> 44 [style=dashed label="expr"]
  24 -> 45 [style=dashed label="simple-expr"]
  24 -> 46 [style=dashed label="conditional-stmt"]
  24 -> 47 [style=dashed label="iteration-stmt"]
  24 -> 48 [style=dashed label="return-stmt"]
  24 -> 49 [style=dashed label="var"]
  24 -> 50 [style=dashed label="op-expr"]
  24 -> 51 [style=dashed label="term"]
  24 -> 52 [style=dashed label="call"]
  25 [label="Estado 25\n\l 13 local-decl: local-decl TYPE ID . ';'\l"]
  25 -> 53 [style=solid label="';'"]
  26 [label="Estado 26\n\l 41 term: INT .\l"]
  26 -> "26R41" [style=solid]
 "26R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  27 [label="Estado 27\n\l 42 term: FLOAT .\l"]
  27 -> "27R42" [style=solid]
 "27R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  28 [label="Estado 28\n\l 43 term: BOOL .\l"]
  28 -> "28R43" [style=solid]
 "28R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 33 var: ID .\l 44 call: ID . '(' args ')'\l"]
  29 -> 54 [style=solid label="'('"]
  29 -> "29R33" [style=solid]
 "29R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 28 conditional-stmt: IF . '(' simple-expr ')' comp-stmt\l 29                 | IF . '(' simple-expr ')' comp-stmt ELSE comp-stmt\l"]
  30 -> 55 [style=solid label="'('"]
  31 [label="Estado 31\n\l 30 iteration-stmt: WHILE . '(' simple-expr ')' comp-stmt\l"]
  31 -> 56 [style=solid label="'('"]
  32 [label="Estado 32\n\l 31 return-stmt: RETURN . simple-expr ';'\l 32            | RETURN . ';'\l"]
  32 -> 26 [style=solid label="INT"]
  32 -> 27 [style=solid label="FLOAT"]
  32 -> 28 [style=solid label="BOOL"]
  32 -> 29 [style=solid label="ID"]
  32 -> 35 [style=solid label="STRUPPER"]
  32 -> 36 [style=solid label="STRLOWER"]
  32 -> 37 [style=solid label="STRCONCAT"]
  32 -> 38 [style=solid label="STRCOPY"]
  32 -> 39 [style=solid label="STRINSERT"]
  32 -> 40 [style=solid label="QUOTES"]
  32 -> 57 [style=solid label="';'"]
  32 -> 41 [style=solid label="'('"]
  32 -> 58 [style=dashed label="simple-expr"]
  32 -> 59 [style=dashed label="var"]
  32 -> 50 [style=dashed label="op-expr"]
  32 -> 51 [style=dashed label="term"]
  32 -> 52 [style=dashed label="call"]
  33 [label="Estado 33\n\l 21 stmt: PRINT . '(' QUOTES string QUOTES ')' ';'\l 22     | PRINT . '(' var ')' ';'\l"]
  33 -> 60 [style=solid label="'('"]
  34 [label="Estado 34\n\l 23 stmt: SCAN . '(' var ')' ';'\l"]
  34 -> 61 [style=solid label="'('"]
  35 [label="Estado 35\n\l 48 call: STRUPPER . '(' args ')'\l"]
  35 -> 62 [style=solid label="'('"]
  36 [label="Estado 36\n\l 49 call: STRLOWER . '(' args ')'\l"]
  36 -> 63 [style=solid label="'('"]
  37 [label="Estado 37\n\l 45 call: STRCONCAT . '(' args ')'\l"]
  37 -> 64 [style=solid label="'('"]
  38 [label="Estado 38\n\l 46 call: STRCOPY . '(' args ')'\l"]
  38 -> 65 [style=solid label="'('"]
  39 [label="Estado 39\n\l 47 call: STRINSERT . '(' args ')'\l"]
  39 -> 66 [style=solid label="'('"]
  40 [label="Estado 40\n\l 40 term: QUOTES . string QUOTES\l"]
  40 -> 67 [style=dashed label="string"]
  40 -> "40R55" [style=solid]
 "40R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 37 term: '(' . op-expr ')'\l"]
  41 -> 26 [style=solid label="INT"]
  41 -> 27 [style=solid label="FLOAT"]
  41 -> 28 [style=solid label="BOOL"]
  41 -> 29 [style=solid label="ID"]
  41 -> 35 [style=solid label="STRUPPER"]
  41 -> 36 [style=solid label="STRLOWER"]
  41 -> 37 [style=solid label="STRCONCAT"]
  41 -> 38 [style=solid label="STRCOPY"]
  41 -> 39 [style=solid label="STRINSERT"]
  41 -> 40 [style=solid label="QUOTES"]
  41 -> 41 [style=solid label="'('"]
  41 -> 59 [style=dashed label="var"]
  41 -> 68 [style=dashed label="op-expr"]
  41 -> 51 [style=dashed label="term"]
  41 -> 52 [style=dashed label="call"]
  42 [label="Estado 42\n\l 12 comp-stmt: '{' local-decl stmt-list '}' .\l"]
  42 -> "42R12" [style=solid]
 "42R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 15 stmt-list: stmt-list stmt .\l"]
  43 -> "43R15" [style=solid]
 "43R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  44 [label="Estado 44\n\l 17 stmt: expr .\l"]
  44 -> "44R17" [style=solid]
 "44R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 25 expr: simple-expr . ';'\l"]
  45 -> 69 [style=solid label="';'"]
  46 [label="Estado 46\n\l 18 stmt: conditional-stmt .\l"]
  46 -> "46R18" [style=solid]
 "46R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  47 [label="Estado 47\n\l 19 stmt: iteration-stmt .\l"]
  47 -> "47R19" [style=solid]
 "47R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  48 [label="Estado 48\n\l 20 stmt: return-stmt .\l"]
  48 -> "48R20" [style=solid]
 "48R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  49 [label="Estado 49\n\l 24 expr: var . ASSIGN expr\l 38 term: var .\l"]
  49 -> 70 [style=solid label="ASSIGN"]
  49 -> "49R38" [style=solid]
 "49R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  50 [label="Estado 50\n\l 26 simple-expr: op-expr . RELOP op-expr\l 27            | op-expr .\l 34 op-expr: op-expr . OP term\l 35        | op-expr . LOG term\l"]
  50 -> 71 [style=solid label="OP"]
  50 -> 72 [style=solid label="RELOP"]
  50 -> 73 [style=solid label="LOG"]
  50 -> "50R27" [style=solid]
 "50R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  51 [label="Estado 51\n\l 36 op-expr: term .\l"]
  51 -> "51R36" [style=solid]
 "51R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l 39 term: call .\l"]
  52 -> "52R39" [style=solid]
 "52R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  53 [label="Estado 53\n\l 13 local-decl: local-decl TYPE ID ';' .\l"]
  53 -> "53R13" [style=solid]
 "53R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  54 [label="Estado 54\n\l 44 call: ID '(' . args ')'\l"]
  54 -> 26 [style=solid label="INT"]
  54 -> 27 [style=solid label="FLOAT"]
  54 -> 28 [style=solid label="BOOL"]
  54 -> 29 [style=solid label="ID"]
  54 -> 35 [style=solid label="STRUPPER"]
  54 -> 36 [style=solid label="STRLOWER"]
  54 -> 37 [style=solid label="STRCONCAT"]
  54 -> 38 [style=solid label="STRCOPY"]
  54 -> 39 [style=solid label="STRINSERT"]
  54 -> 40 [style=solid label="QUOTES"]
  54 -> 41 [style=solid label="'('"]
  54 -> 74 [style=dashed label="simple-expr"]
  54 -> 59 [style=dashed label="var"]
  54 -> 50 [style=dashed label="op-expr"]
  54 -> 51 [style=dashed label="term"]
  54 -> 52 [style=dashed label="call"]
  54 -> 75 [style=dashed label="args"]
  54 -> 76 [style=dashed label="arg-list"]
  54 -> "54R51" [style=solid]
 "54R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  55 [label="Estado 55\n\l 28 conditional-stmt: IF '(' . simple-expr ')' comp-stmt\l 29                 | IF '(' . simple-expr ')' comp-stmt ELSE comp-stmt\l"]
  55 -> 26 [style=solid label="INT"]
  55 -> 27 [style=solid label="FLOAT"]
  55 -> 28 [style=solid label="BOOL"]
  55 -> 29 [style=solid label="ID"]
  55 -> 35 [style=solid label="STRUPPER"]
  55 -> 36 [style=solid label="STRLOWER"]
  55 -> 37 [style=solid label="STRCONCAT"]
  55 -> 38 [style=solid label="STRCOPY"]
  55 -> 39 [style=solid label="STRINSERT"]
  55 -> 40 [style=solid label="QUOTES"]
  55 -> 41 [style=solid label="'('"]
  55 -> 77 [style=dashed label="simple-expr"]
  55 -> 59 [style=dashed label="var"]
  55 -> 50 [style=dashed label="op-expr"]
  55 -> 51 [style=dashed label="term"]
  55 -> 52 [style=dashed label="call"]
  56 [label="Estado 56\n\l 30 iteration-stmt: WHILE '(' . simple-expr ')' comp-stmt\l"]
  56 -> 26 [style=solid label="INT"]
  56 -> 27 [style=solid label="FLOAT"]
  56 -> 28 [style=solid label="BOOL"]
  56 -> 29 [style=solid label="ID"]
  56 -> 35 [style=solid label="STRUPPER"]
  56 -> 36 [style=solid label="STRLOWER"]
  56 -> 37 [style=solid label="STRCONCAT"]
  56 -> 38 [style=solid label="STRCOPY"]
  56 -> 39 [style=solid label="STRINSERT"]
  56 -> 40 [style=solid label="QUOTES"]
  56 -> 41 [style=solid label="'('"]
  56 -> 78 [style=dashed label="simple-expr"]
  56 -> 59 [style=dashed label="var"]
  56 -> 50 [style=dashed label="op-expr"]
  56 -> 51 [style=dashed label="term"]
  56 -> 52 [style=dashed label="call"]
  57 [label="Estado 57\n\l 32 return-stmt: RETURN ';' .\l"]
  57 -> "57R32" [style=solid]
 "57R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  58 [label="Estado 58\n\l 31 return-stmt: RETURN simple-expr . ';'\l"]
  58 -> 79 [style=solid label="';'"]
  59 [label="Estado 59\n\l 38 term: var .\l"]
  59 -> "59R38" [style=solid]
 "59R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  60 [label="Estado 60\n\l 21 stmt: PRINT '(' . QUOTES string QUOTES ')' ';'\l 22     | PRINT '(' . var ')' ';'\l"]
  60 -> 80 [style=solid label="ID"]
  60 -> 81 [style=solid label="QUOTES"]
  60 -> 82 [style=dashed label="var"]
  61 [label="Estado 61\n\l 23 stmt: SCAN '(' . var ')' ';'\l"]
  61 -> 80 [style=solid label="ID"]
  61 -> 83 [style=dashed label="var"]
  62 [label="Estado 62\n\l 48 call: STRUPPER '(' . args ')'\l"]
  62 -> 26 [style=solid label="INT"]
  62 -> 27 [style=solid label="FLOAT"]
  62 -> 28 [style=solid label="BOOL"]
  62 -> 29 [style=solid label="ID"]
  62 -> 35 [style=solid label="STRUPPER"]
  62 -> 36 [style=solid label="STRLOWER"]
  62 -> 37 [style=solid label="STRCONCAT"]
  62 -> 38 [style=solid label="STRCOPY"]
  62 -> 39 [style=solid label="STRINSERT"]
  62 -> 40 [style=solid label="QUOTES"]
  62 -> 41 [style=solid label="'('"]
  62 -> 74 [style=dashed label="simple-expr"]
  62 -> 59 [style=dashed label="var"]
  62 -> 50 [style=dashed label="op-expr"]
  62 -> 51 [style=dashed label="term"]
  62 -> 52 [style=dashed label="call"]
  62 -> 84 [style=dashed label="args"]
  62 -> 76 [style=dashed label="arg-list"]
  62 -> "62R51" [style=solid]
 "62R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  63 [label="Estado 63\n\l 49 call: STRLOWER '(' . args ')'\l"]
  63 -> 26 [style=solid label="INT"]
  63 -> 27 [style=solid label="FLOAT"]
  63 -> 28 [style=solid label="BOOL"]
  63 -> 29 [style=solid label="ID"]
  63 -> 35 [style=solid label="STRUPPER"]
  63 -> 36 [style=solid label="STRLOWER"]
  63 -> 37 [style=solid label="STRCONCAT"]
  63 -> 38 [style=solid label="STRCOPY"]
  63 -> 39 [style=solid label="STRINSERT"]
  63 -> 40 [style=solid label="QUOTES"]
  63 -> 41 [style=solid label="'('"]
  63 -> 74 [style=dashed label="simple-expr"]
  63 -> 59 [style=dashed label="var"]
  63 -> 50 [style=dashed label="op-expr"]
  63 -> 51 [style=dashed label="term"]
  63 -> 52 [style=dashed label="call"]
  63 -> 85 [style=dashed label="args"]
  63 -> 76 [style=dashed label="arg-list"]
  63 -> "63R51" [style=solid]
 "63R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 45 call: STRCONCAT '(' . args ')'\l"]
  64 -> 26 [style=solid label="INT"]
  64 -> 27 [style=solid label="FLOAT"]
  64 -> 28 [style=solid label="BOOL"]
  64 -> 29 [style=solid label="ID"]
  64 -> 35 [style=solid label="STRUPPER"]
  64 -> 36 [style=solid label="STRLOWER"]
  64 -> 37 [style=solid label="STRCONCAT"]
  64 -> 38 [style=solid label="STRCOPY"]
  64 -> 39 [style=solid label="STRINSERT"]
  64 -> 40 [style=solid label="QUOTES"]
  64 -> 41 [style=solid label="'('"]
  64 -> 74 [style=dashed label="simple-expr"]
  64 -> 59 [style=dashed label="var"]
  64 -> 50 [style=dashed label="op-expr"]
  64 -> 51 [style=dashed label="term"]
  64 -> 52 [style=dashed label="call"]
  64 -> 86 [style=dashed label="args"]
  64 -> 76 [style=dashed label="arg-list"]
  64 -> "64R51" [style=solid]
 "64R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 46 call: STRCOPY '(' . args ')'\l"]
  65 -> 26 [style=solid label="INT"]
  65 -> 27 [style=solid label="FLOAT"]
  65 -> 28 [style=solid label="BOOL"]
  65 -> 29 [style=solid label="ID"]
  65 -> 35 [style=solid label="STRUPPER"]
  65 -> 36 [style=solid label="STRLOWER"]
  65 -> 37 [style=solid label="STRCONCAT"]
  65 -> 38 [style=solid label="STRCOPY"]
  65 -> 39 [style=solid label="STRINSERT"]
  65 -> 40 [style=solid label="QUOTES"]
  65 -> 41 [style=solid label="'('"]
  65 -> 74 [style=dashed label="simple-expr"]
  65 -> 59 [style=dashed label="var"]
  65 -> 50 [style=dashed label="op-expr"]
  65 -> 51 [style=dashed label="term"]
  65 -> 52 [style=dashed label="call"]
  65 -> 87 [style=dashed label="args"]
  65 -> 76 [style=dashed label="arg-list"]
  65 -> "65R51" [style=solid]
 "65R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  66 [label="Estado 66\n\l 47 call: STRINSERT '(' . args ')'\l"]
  66 -> 26 [style=solid label="INT"]
  66 -> 27 [style=solid label="FLOAT"]
  66 -> 28 [style=solid label="BOOL"]
  66 -> 29 [style=solid label="ID"]
  66 -> 35 [style=solid label="STRUPPER"]
  66 -> 36 [style=solid label="STRLOWER"]
  66 -> 37 [style=solid label="STRCONCAT"]
  66 -> 38 [style=solid label="STRCOPY"]
  66 -> 39 [style=solid label="STRINSERT"]
  66 -> 40 [style=solid label="QUOTES"]
  66 -> 41 [style=solid label="'('"]
  66 -> 74 [style=dashed label="simple-expr"]
  66 -> 59 [style=dashed label="var"]
  66 -> 50 [style=dashed label="op-expr"]
  66 -> 51 [style=dashed label="term"]
  66 -> 52 [style=dashed label="call"]
  66 -> 88 [style=dashed label="args"]
  66 -> 76 [style=dashed label="arg-list"]
  66 -> "66R51" [style=solid]
 "66R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  67 [label="Estado 67\n\l 40 term: QUOTES string . QUOTES\l 54 string: string . STR\l"]
  67 -> 89 [style=solid label="STR"]
  67 -> 90 [style=solid label="QUOTES"]
  68 [label="Estado 68\n\l 34 op-expr: op-expr . OP term\l 35        | op-expr . LOG term\l 37 term: '(' op-expr . ')'\l"]
  68 -> 71 [style=solid label="OP"]
  68 -> 73 [style=solid label="LOG"]
  68 -> 91 [style=solid label="')'"]
  69 [label="Estado 69\n\l 25 expr: simple-expr ';' .\l"]
  69 -> "69R25" [style=solid]
 "69R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  70 [label="Estado 70\n\l 24 expr: var ASSIGN . expr\l"]
  70 -> 26 [style=solid label="INT"]
  70 -> 27 [style=solid label="FLOAT"]
  70 -> 28 [style=solid label="BOOL"]
  70 -> 29 [style=solid label="ID"]
  70 -> 35 [style=solid label="STRUPPER"]
  70 -> 36 [style=solid label="STRLOWER"]
  70 -> 37 [style=solid label="STRCONCAT"]
  70 -> 38 [style=solid label="STRCOPY"]
  70 -> 39 [style=solid label="STRINSERT"]
  70 -> 40 [style=solid label="QUOTES"]
  70 -> 41 [style=solid label="'('"]
  70 -> 92 [style=dashed label="expr"]
  70 -> 45 [style=dashed label="simple-expr"]
  70 -> 49 [style=dashed label="var"]
  70 -> 50 [style=dashed label="op-expr"]
  70 -> 51 [style=dashed label="term"]
  70 -> 52 [style=dashed label="call"]
  71 [label="Estado 71\n\l 34 op-expr: op-expr OP . term\l"]
  71 -> 26 [style=solid label="INT"]
  71 -> 27 [style=solid label="FLOAT"]
  71 -> 28 [style=solid label="BOOL"]
  71 -> 29 [style=solid label="ID"]
  71 -> 35 [style=solid label="STRUPPER"]
  71 -> 36 [style=solid label="STRLOWER"]
  71 -> 37 [style=solid label="STRCONCAT"]
  71 -> 38 [style=solid label="STRCOPY"]
  71 -> 39 [style=solid label="STRINSERT"]
  71 -> 40 [style=solid label="QUOTES"]
  71 -> 41 [style=solid label="'('"]
  71 -> 59 [style=dashed label="var"]
  71 -> 93 [style=dashed label="term"]
  71 -> 52 [style=dashed label="call"]
  72 [label="Estado 72\n\l 26 simple-expr: op-expr RELOP . op-expr\l"]
  72 -> 26 [style=solid label="INT"]
  72 -> 27 [style=solid label="FLOAT"]
  72 -> 28 [style=solid label="BOOL"]
  72 -> 29 [style=solid label="ID"]
  72 -> 35 [style=solid label="STRUPPER"]
  72 -> 36 [style=solid label="STRLOWER"]
  72 -> 37 [style=solid label="STRCONCAT"]
  72 -> 38 [style=solid label="STRCOPY"]
  72 -> 39 [style=solid label="STRINSERT"]
  72 -> 40 [style=solid label="QUOTES"]
  72 -> 41 [style=solid label="'('"]
  72 -> 59 [style=dashed label="var"]
  72 -> 94 [style=dashed label="op-expr"]
  72 -> 51 [style=dashed label="term"]
  72 -> 52 [style=dashed label="call"]
  73 [label="Estado 73\n\l 35 op-expr: op-expr LOG . term\l"]
  73 -> 26 [style=solid label="INT"]
  73 -> 27 [style=solid label="FLOAT"]
  73 -> 28 [style=solid label="BOOL"]
  73 -> 29 [style=solid label="ID"]
  73 -> 35 [style=solid label="STRUPPER"]
  73 -> 36 [style=solid label="STRLOWER"]
  73 -> 37 [style=solid label="STRCONCAT"]
  73 -> 38 [style=solid label="STRCOPY"]
  73 -> 39 [style=solid label="STRINSERT"]
  73 -> 40 [style=solid label="QUOTES"]
  73 -> 41 [style=solid label="'('"]
  73 -> 59 [style=dashed label="var"]
  73 -> 95 [style=dashed label="term"]
  73 -> 52 [style=dashed label="call"]
  74 [label="Estado 74\n\l 53 arg-list: simple-expr .\l"]
  74 -> "74R53" [style=solid]
 "74R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  75 [label="Estado 75\n\l 44 call: ID '(' args . ')'\l"]
  75 -> 96 [style=solid label="')'"]
  76 [label="Estado 76\n\l 50 args: arg-list .\l 52 arg-list: arg-list . ',' simple-expr\l"]
  76 -> 97 [style=solid label="','"]
  76 -> "76R50" [style=solid]
 "76R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 28 conditional-stmt: IF '(' simple-expr . ')' comp-stmt\l 29                 | IF '(' simple-expr . ')' comp-stmt ELSE comp-stmt\l"]
  77 -> 98 [style=solid label="')'"]
  78 [label="Estado 78\n\l 30 iteration-stmt: WHILE '(' simple-expr . ')' comp-stmt\l"]
  78 -> 99 [style=solid label="')'"]
  79 [label="Estado 79\n\l 31 return-stmt: RETURN simple-expr ';' .\l"]
  79 -> "79R31" [style=solid]
 "79R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 33 var: ID .\l"]
  80 -> "80R33" [style=solid]
 "80R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 21 stmt: PRINT '(' QUOTES . string QUOTES ')' ';'\l"]
  81 -> 100 [style=dashed label="string"]
  81 -> "81R55" [style=solid]
 "81R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 22 stmt: PRINT '(' var . ')' ';'\l"]
  82 -> 101 [style=solid label="')'"]
  83 [label="Estado 83\n\l 23 stmt: SCAN '(' var . ')' ';'\l"]
  83 -> 102 [style=solid label="')'"]
  84 [label="Estado 84\n\l 48 call: STRUPPER '(' args . ')'\l"]
  84 -> 103 [style=solid label="')'"]
  85 [label="Estado 85\n\l 49 call: STRLOWER '(' args . ')'\l"]
  85 -> 104 [style=solid label="')'"]
  86 [label="Estado 86\n\l 45 call: STRCONCAT '(' args . ')'\l"]
  86 -> 105 [style=solid label="')'"]
  87 [label="Estado 87\n\l 46 call: STRCOPY '(' args . ')'\l"]
  87 -> 106 [style=solid label="')'"]
  88 [label="Estado 88\n\l 47 call: STRINSERT '(' args . ')'\l"]
  88 -> 107 [style=solid label="')'"]
  89 [label="Estado 89\n\l 54 string: string STR .\l"]
  89 -> "89R54" [style=solid]
 "89R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  90 [label="Estado 90\n\l 40 term: QUOTES string QUOTES .\l"]
  90 -> "90R40" [style=solid]
 "90R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  91 [label="Estado 91\n\l 37 term: '(' op-expr ')' .\l"]
  91 -> "91R37" [style=solid]
 "91R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  92 [label="Estado 92\n\l 24 expr: var ASSIGN expr .\l"]
  92 -> "92R24" [style=solid]
 "92R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  93 [label="Estado 93\n\l 34 op-expr: op-expr OP term .\l"]
  93 -> "93R34" [style=solid]
 "93R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l 26 simple-expr: op-expr RELOP op-expr .\l 34 op-expr: op-expr . OP term\l 35        | op-expr . LOG term\l"]
  94 -> 71 [style=solid label="OP"]
  94 -> 73 [style=solid label="LOG"]
  94 -> "94R26" [style=solid]
 "94R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  95 [label="Estado 95\n\l 35 op-expr: op-expr LOG term .\l"]
  95 -> "95R35" [style=solid]
 "95R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  96 [label="Estado 96\n\l 44 call: ID '(' args ')' .\l"]
  96 -> "96R44" [style=solid]
 "96R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 52 arg-list: arg-list ',' . simple-expr\l"]
  97 -> 26 [style=solid label="INT"]
  97 -> 27 [style=solid label="FLOAT"]
  97 -> 28 [style=solid label="BOOL"]
  97 -> 29 [style=solid label="ID"]
  97 -> 35 [style=solid label="STRUPPER"]
  97 -> 36 [style=solid label="STRLOWER"]
  97 -> 37 [style=solid label="STRCONCAT"]
  97 -> 38 [style=solid label="STRCOPY"]
  97 -> 39 [style=solid label="STRINSERT"]
  97 -> 40 [style=solid label="QUOTES"]
  97 -> 41 [style=solid label="'('"]
  97 -> 108 [style=dashed label="simple-expr"]
  97 -> 59 [style=dashed label="var"]
  97 -> 50 [style=dashed label="op-expr"]
  97 -> 51 [style=dashed label="term"]
  97 -> 52 [style=dashed label="call"]
  98 [label="Estado 98\n\l 28 conditional-stmt: IF '(' simple-expr ')' . comp-stmt\l 29                 | IF '(' simple-expr ')' . comp-stmt ELSE comp-stmt\l"]
  98 -> 18 [style=solid label="'{'"]
  98 -> 109 [style=dashed label="comp-stmt"]
  99 [label="Estado 99\n\l 30 iteration-stmt: WHILE '(' simple-expr ')' . comp-stmt\l"]
  99 -> 18 [style=solid label="'{'"]
  99 -> 110 [style=dashed label="comp-stmt"]
  100 [label="Estado 100\n\l 21 stmt: PRINT '(' QUOTES string . QUOTES ')' ';'\l 54 string: string . STR\l"]
  100 -> 89 [style=solid label="STR"]
  100 -> 111 [style=solid label="QUOTES"]
  101 [label="Estado 101\n\l 22 stmt: PRINT '(' var ')' . ';'\l"]
  101 -> 112 [style=solid label="';'"]
  102 [label="Estado 102\n\l 23 stmt: SCAN '(' var ')' . ';'\l"]
  102 -> 113 [style=solid label="';'"]
  103 [label="Estado 103\n\l 48 call: STRUPPER '(' args ')' .\l"]
  103 -> "103R48" [style=solid]
 "103R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  104 [label="Estado 104\n\l 49 call: STRLOWER '(' args ')' .\l"]
  104 -> "104R49" [style=solid]
 "104R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  105 [label="Estado 105\n\l 45 call: STRCONCAT '(' args ')' .\l"]
  105 -> "105R45" [style=solid]
 "105R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  106 [label="Estado 106\n\l 46 call: STRCOPY '(' args ')' .\l"]
  106 -> "106R46" [style=solid]
 "106R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  107 [label="Estado 107\n\l 47 call: STRINSERT '(' args ')' .\l"]
  107 -> "107R47" [style=solid]
 "107R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  108 [label="Estado 108\n\l 52 arg-list: arg-list ',' simple-expr .\l"]
  108 -> "108R52" [style=solid]
 "108R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  109 [label="Estado 109\n\l 28 conditional-stmt: IF '(' simple-expr ')' comp-stmt .\l 29                 | IF '(' simple-expr ')' comp-stmt . ELSE comp-stmt\l"]
  109 -> 114 [style=solid label="ELSE"]
  109 -> "109R28" [style=solid]
 "109R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l 30 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt .\l"]
  110 -> "110R30" [style=solid]
 "110R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l 21 stmt: PRINT '(' QUOTES string QUOTES . ')' ';'\l"]
  111 -> 115 [style=solid label="')'"]
  112 [label="Estado 112\n\l 22 stmt: PRINT '(' var ')' ';' .\l"]
  112 -> "112R22" [style=solid]
 "112R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 23 stmt: SCAN '(' var ')' ';' .\l"]
  113 -> "113R23" [style=solid]
 "113R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE . comp-stmt\l"]
  114 -> 18 [style=solid label="'{'"]
  114 -> 116 [style=dashed label="comp-stmt"]
  115 [label="Estado 115\n\l 21 stmt: PRINT '(' QUOTES string QUOTES ')' . ';'\l"]
  115 -> 117 [style=solid label="';'"]
  116 [label="Estado 116\n\l 29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt .\l"]
  116 -> "116R29" [style=solid]
 "116R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  117 [label="Estado 117\n\l 21 stmt: PRINT '(' QUOTES string QUOTES ')' ';' .\l"]
  117 -> "117R21" [style=solid]
 "117R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
}
