// Gerado por GNU Bison 3.7.
// Relate erros para <bug-bison@gnu.org>.
// Site: <https://www.gnu.org/software/bison/>.

digraph "syntax.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: • prog $end\l"]
  0 -> 1 [style=solid label="TYPE"]
  0 -> 2 [style=dashed label="prog"]
  0 -> 3 [style=dashed label="decl-list"]
  0 -> 4 [style=dashed label="var-decl"]
  0 -> 5 [style=dashed label="func"]
  1 [label="Estado 1\n\l  6 var-decl: TYPE • ID ';'\l  8 func: TYPE • ID $@1 '(' params-list ')' comp-stmt\l"]
  1 -> 6 [style=solid label="ID"]
  2 [label="Estado 2\n\l  0 $accept: prog • $end\l"]
  2 -> 7 [style=solid label="$end"]
  3 [label="Estado 3\n\l  1 prog: decl-list •\l  2 decl-list: decl-list • var-decl\l  4          | decl-list • func\l"]
  3 -> 1 [style=solid label="TYPE"]
  3 -> 8 [style=dashed label="var-decl"]
  3 -> 9 [style=dashed label="func"]
  3 -> "3R1" [style=solid]
 "3R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l  3 decl-list: var-decl •\l"]
  4 -> "4R3" [style=solid]
 "4R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l  5 decl-list: func •\l"]
  5 -> "5R5" [style=solid]
 "5R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l  6 var-decl: TYPE ID • ';'\l  8 func: TYPE ID • $@1 '(' params-list ')' comp-stmt\l"]
  6 -> 10 [style=solid label="';'"]
  6 -> 11 [style=dashed label="$@1"]
  6 -> "6R7" [style=solid]
 "6R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l  0 $accept: prog $end •\l"]
  7 -> "7R0" [style=solid]
 "7R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  8 [label="Estado 8\n\l  2 decl-list: decl-list var-decl •\l"]
  8 -> "8R2" [style=solid]
 "8R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l  4 decl-list: decl-list func •\l"]
  9 -> "9R4" [style=solid]
 "9R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l  6 var-decl: TYPE ID ';' •\l"]
  10 -> "10R6" [style=solid]
 "10R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  11 [label="Estado 11\n\l  8 func: TYPE ID $@1 • '(' params-list ')' comp-stmt\l"]
  11 -> 12 [style=solid label="'('"]
  12 [label="Estado 12\n\l  8 func: TYPE ID $@1 '(' • params-list ')' comp-stmt\l"]
  12 -> 13 [style=solid label="TYPE"]
  12 -> 14 [style=dashed label="params-list"]
  12 -> 15 [style=dashed label="params"]
  12 -> "12R10" [style=solid]
 "12R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l 12 params: TYPE • ID\l"]
  13 -> 16 [style=solid label="ID"]
  14 [label="Estado 14\n\l  8 func: TYPE ID $@1 '(' params-list • ')' comp-stmt\l"]
  14 -> 17 [style=solid label="')'"]
  15 [label="Estado 15\n\l  9 params-list: params •\l 11 params: params • ',' TYPE ID\l"]
  15 -> 18 [style=solid label="','"]
  15 -> "15R9" [style=solid]
 "15R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  16 [label="Estado 16\n\l 12 params: TYPE ID •\l"]
  16 -> "16R12" [style=solid]
 "16R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l  8 func: TYPE ID $@1 '(' params-list ')' • comp-stmt\l"]
  17 -> 19 [style=solid label="'{'"]
  17 -> 20 [style=dashed label="comp-stmt"]
  18 [label="Estado 18\n\l 11 params: params ',' • TYPE ID\l"]
  18 -> 21 [style=solid label="TYPE"]
  19 [label="Estado 19\n\l 13 comp-stmt: '{' • local-decl stmt-list '}'\l"]
  19 -> 22 [style=dashed label="local-decl"]
  19 -> "19R15" [style=solid]
 "19R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  20 [label="Estado 20\n\l  8 func: TYPE ID $@1 '(' params-list ')' comp-stmt •\l"]
  20 -> "20R8" [style=solid]
 "20R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  21 [label="Estado 21\n\l 11 params: params ',' TYPE • ID\l"]
  21 -> 23 [style=solid label="ID"]
  22 [label="Estado 22\n\l 13 comp-stmt: '{' local-decl • stmt-list '}'\l 14 local-decl: local-decl • var-decl\l"]
  22 -> 24 [style=solid label="TYPE"]
  22 -> 25 [style=dashed label="var-decl"]
  22 -> 26 [style=dashed label="stmt-list"]
  22 -> "22R17" [style=solid]
 "22R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  23 [label="Estado 23\n\l 11 params: params ',' TYPE ID •\l"]
  23 -> "23R11" [style=solid]
 "23R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  24 [label="Estado 24\n\l  6 var-decl: TYPE • ID ';'\l"]
  24 -> 27 [style=solid label="ID"]
  25 [label="Estado 25\n\l 14 local-decl: local-decl var-decl •\l"]
  25 -> "25R14" [style=solid]
 "25R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  26 [label="Estado 26\n\l 13 comp-stmt: '{' local-decl stmt-list • '}'\l 16 stmt-list: stmt-list • stmt\l"]
  26 -> 28 [style=solid label="INT"]
  26 -> 29 [style=solid label="FLOAT"]
  26 -> 30 [style=solid label="BOOL"]
  26 -> 31 [style=solid label="ID"]
  26 -> 32 [style=solid label="IF"]
  26 -> 33 [style=solid label="WHILE"]
  26 -> 34 [style=solid label="RETURN"]
  26 -> 35 [style=solid label="PRINT"]
  26 -> 36 [style=solid label="SCAN"]
  26 -> 37 [style=solid label="STRUPPER"]
  26 -> 38 [style=solid label="STRLOWER"]
  26 -> 39 [style=solid label="STRCONCAT"]
  26 -> 40 [style=solid label="STRCOPY"]
  26 -> 41 [style=solid label="STRINSERT"]
  26 -> 42 [style=solid label="QUOTES"]
  26 -> 43 [style=solid label="'('"]
  26 -> 44 [style=solid label="'}'"]
  26 -> 45 [style=dashed label="stmt"]
  26 -> 46 [style=dashed label="expr"]
  26 -> 47 [style=dashed label="simple-expr"]
  26 -> 48 [style=dashed label="conditional-stmt"]
  26 -> 49 [style=dashed label="iteration-stmt"]
  26 -> 50 [style=dashed label="return-stmt"]
  26 -> 51 [style=dashed label="var"]
  26 -> 52 [style=dashed label="op-expr"]
  26 -> 53 [style=dashed label="term"]
  26 -> 54 [style=dashed label="call"]
  27 [label="Estado 27\n\l  6 var-decl: TYPE ID • ';'\l"]
  27 -> 10 [style=solid label="';'"]
  28 [label="Estado 28\n\l 42 term: INT •\l"]
  28 -> "28R42" [style=solid]
 "28R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 43 term: FLOAT •\l"]
  29 -> "29R43" [style=solid]
 "29R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 44 term: BOOL •\l"]
  30 -> "30R44" [style=solid]
 "30R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  31 [label="Estado 31\n\l 34 var: ID •\l 45 call: ID • '(' args ')'\l"]
  31 -> 55 [style=solid label="'('"]
  31 -> "31R34" [style=solid]
 "31R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  32 [label="Estado 32\n\l 29 conditional-stmt: IF • '(' simple-expr ')' comp-stmt\l 30                 | IF • '(' simple-expr ')' comp-stmt ELSE comp-stmt\l"]
  32 -> 56 [style=solid label="'('"]
  33 [label="Estado 33\n\l 31 iteration-stmt: WHILE • '(' simple-expr ')' comp-stmt\l"]
  33 -> 57 [style=solid label="'('"]
  34 [label="Estado 34\n\l 32 return-stmt: RETURN • simple-expr ';'\l 33            | RETURN • ';'\l"]
  34 -> 28 [style=solid label="INT"]
  34 -> 29 [style=solid label="FLOAT"]
  34 -> 30 [style=solid label="BOOL"]
  34 -> 31 [style=solid label="ID"]
  34 -> 37 [style=solid label="STRUPPER"]
  34 -> 38 [style=solid label="STRLOWER"]
  34 -> 39 [style=solid label="STRCONCAT"]
  34 -> 40 [style=solid label="STRCOPY"]
  34 -> 41 [style=solid label="STRINSERT"]
  34 -> 42 [style=solid label="QUOTES"]
  34 -> 58 [style=solid label="';'"]
  34 -> 43 [style=solid label="'('"]
  34 -> 59 [style=dashed label="simple-expr"]
  34 -> 60 [style=dashed label="var"]
  34 -> 52 [style=dashed label="op-expr"]
  34 -> 53 [style=dashed label="term"]
  34 -> 54 [style=dashed label="call"]
  35 [label="Estado 35\n\l 22 stmt: PRINT • '(' QUOTES string QUOTES ')' ';'\l 23     | PRINT • '(' var ')' ';'\l"]
  35 -> 61 [style=solid label="'('"]
  36 [label="Estado 36\n\l 24 stmt: SCAN • '(' var ')' ';'\l"]
  36 -> 62 [style=solid label="'('"]
  37 [label="Estado 37\n\l 49 call: STRUPPER • '(' args ')'\l"]
  37 -> 63 [style=solid label="'('"]
  38 [label="Estado 38\n\l 50 call: STRLOWER • '(' args ')'\l"]
  38 -> 64 [style=solid label="'('"]
  39 [label="Estado 39\n\l 46 call: STRCONCAT • '(' args ')'\l"]
  39 -> 65 [style=solid label="'('"]
  40 [label="Estado 40\n\l 47 call: STRCOPY • '(' args ')'\l"]
  40 -> 66 [style=solid label="'('"]
  41 [label="Estado 41\n\l 48 call: STRINSERT • '(' args ')'\l"]
  41 -> 67 [style=solid label="'('"]
  42 [label="Estado 42\n\l 41 term: QUOTES • string QUOTES\l"]
  42 -> 68 [style=dashed label="string"]
  42 -> "42R56" [style=solid]
 "42R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 38 term: '(' • simple-expr ')'\l"]
  43 -> 28 [style=solid label="INT"]
  43 -> 29 [style=solid label="FLOAT"]
  43 -> 30 [style=solid label="BOOL"]
  43 -> 31 [style=solid label="ID"]
  43 -> 37 [style=solid label="STRUPPER"]
  43 -> 38 [style=solid label="STRLOWER"]
  43 -> 39 [style=solid label="STRCONCAT"]
  43 -> 40 [style=solid label="STRCOPY"]
  43 -> 41 [style=solid label="STRINSERT"]
  43 -> 42 [style=solid label="QUOTES"]
  43 -> 43 [style=solid label="'('"]
  43 -> 69 [style=dashed label="simple-expr"]
  43 -> 60 [style=dashed label="var"]
  43 -> 52 [style=dashed label="op-expr"]
  43 -> 53 [style=dashed label="term"]
  43 -> 54 [style=dashed label="call"]
  44 [label="Estado 44\n\l 13 comp-stmt: '{' local-decl stmt-list '}' •\l"]
  44 -> "44R13" [style=solid]
 "44R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 16 stmt-list: stmt-list stmt •\l"]
  45 -> "45R16" [style=solid]
 "45R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 18 stmt: expr •\l"]
  46 -> "46R18" [style=solid]
 "46R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  47 [label="Estado 47\n\l 26 expr: simple-expr • ';'\l"]
  47 -> 70 [style=solid label="';'"]
  48 [label="Estado 48\n\l 19 stmt: conditional-stmt •\l"]
  48 -> "48R19" [style=solid]
 "48R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  49 [label="Estado 49\n\l 20 stmt: iteration-stmt •\l"]
  49 -> "49R20" [style=solid]
 "49R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  50 [label="Estado 50\n\l 21 stmt: return-stmt •\l"]
  50 -> "50R21" [style=solid]
 "50R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  51 [label="Estado 51\n\l 25 expr: var • ASSIGN expr\l 39 term: var •\l"]
  51 -> 71 [style=solid label="ASSIGN"]
  51 -> "51R39" [style=solid]
 "51R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l 27 simple-expr: op-expr • RELOP op-expr\l 28            | op-expr •\l 35 op-expr: op-expr • OP term\l 36        | op-expr • LOG term\l"]
  52 -> 72 [style=solid label="OP"]
  52 -> 73 [style=solid label="RELOP"]
  52 -> 74 [style=solid label="LOG"]
  52 -> "52R28" [style=solid]
 "52R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  53 [label="Estado 53\n\l 37 op-expr: term •\l"]
  53 -> "53R37" [style=solid]
 "53R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  54 [label="Estado 54\n\l 40 term: call •\l"]
  54 -> "54R40" [style=solid]
 "54R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  55 [label="Estado 55\n\l 45 call: ID '(' • args ')'\l"]
  55 -> 28 [style=solid label="INT"]
  55 -> 29 [style=solid label="FLOAT"]
  55 -> 30 [style=solid label="BOOL"]
  55 -> 31 [style=solid label="ID"]
  55 -> 37 [style=solid label="STRUPPER"]
  55 -> 38 [style=solid label="STRLOWER"]
  55 -> 39 [style=solid label="STRCONCAT"]
  55 -> 40 [style=solid label="STRCOPY"]
  55 -> 41 [style=solid label="STRINSERT"]
  55 -> 42 [style=solid label="QUOTES"]
  55 -> 43 [style=solid label="'('"]
  55 -> 75 [style=dashed label="simple-expr"]
  55 -> 60 [style=dashed label="var"]
  55 -> 52 [style=dashed label="op-expr"]
  55 -> 53 [style=dashed label="term"]
  55 -> 54 [style=dashed label="call"]
  55 -> 76 [style=dashed label="args"]
  55 -> 77 [style=dashed label="arg-list"]
  55 -> "55R52" [style=solid]
 "55R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  56 [label="Estado 56\n\l 29 conditional-stmt: IF '(' • simple-expr ')' comp-stmt\l 30                 | IF '(' • simple-expr ')' comp-stmt ELSE comp-stmt\l"]
  56 -> 28 [style=solid label="INT"]
  56 -> 29 [style=solid label="FLOAT"]
  56 -> 30 [style=solid label="BOOL"]
  56 -> 31 [style=solid label="ID"]
  56 -> 37 [style=solid label="STRUPPER"]
  56 -> 38 [style=solid label="STRLOWER"]
  56 -> 39 [style=solid label="STRCONCAT"]
  56 -> 40 [style=solid label="STRCOPY"]
  56 -> 41 [style=solid label="STRINSERT"]
  56 -> 42 [style=solid label="QUOTES"]
  56 -> 43 [style=solid label="'('"]
  56 -> 78 [style=dashed label="simple-expr"]
  56 -> 60 [style=dashed label="var"]
  56 -> 52 [style=dashed label="op-expr"]
  56 -> 53 [style=dashed label="term"]
  56 -> 54 [style=dashed label="call"]
  57 [label="Estado 57\n\l 31 iteration-stmt: WHILE '(' • simple-expr ')' comp-stmt\l"]
  57 -> 28 [style=solid label="INT"]
  57 -> 29 [style=solid label="FLOAT"]
  57 -> 30 [style=solid label="BOOL"]
  57 -> 31 [style=solid label="ID"]
  57 -> 37 [style=solid label="STRUPPER"]
  57 -> 38 [style=solid label="STRLOWER"]
  57 -> 39 [style=solid label="STRCONCAT"]
  57 -> 40 [style=solid label="STRCOPY"]
  57 -> 41 [style=solid label="STRINSERT"]
  57 -> 42 [style=solid label="QUOTES"]
  57 -> 43 [style=solid label="'('"]
  57 -> 79 [style=dashed label="simple-expr"]
  57 -> 60 [style=dashed label="var"]
  57 -> 52 [style=dashed label="op-expr"]
  57 -> 53 [style=dashed label="term"]
  57 -> 54 [style=dashed label="call"]
  58 [label="Estado 58\n\l 33 return-stmt: RETURN ';' •\l"]
  58 -> "58R33" [style=solid]
 "58R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  59 [label="Estado 59\n\l 32 return-stmt: RETURN simple-expr • ';'\l"]
  59 -> 80 [style=solid label="';'"]
  60 [label="Estado 60\n\l 39 term: var •\l"]
  60 -> "60R39" [style=solid]
 "60R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  61 [label="Estado 61\n\l 22 stmt: PRINT '(' • QUOTES string QUOTES ')' ';'\l 23     | PRINT '(' • var ')' ';'\l"]
  61 -> 81 [style=solid label="ID"]
  61 -> 82 [style=solid label="QUOTES"]
  61 -> 83 [style=dashed label="var"]
  62 [label="Estado 62\n\l 24 stmt: SCAN '(' • var ')' ';'\l"]
  62 -> 81 [style=solid label="ID"]
  62 -> 84 [style=dashed label="var"]
  63 [label="Estado 63\n\l 49 call: STRUPPER '(' • args ')'\l"]
  63 -> 28 [style=solid label="INT"]
  63 -> 29 [style=solid label="FLOAT"]
  63 -> 30 [style=solid label="BOOL"]
  63 -> 31 [style=solid label="ID"]
  63 -> 37 [style=solid label="STRUPPER"]
  63 -> 38 [style=solid label="STRLOWER"]
  63 -> 39 [style=solid label="STRCONCAT"]
  63 -> 40 [style=solid label="STRCOPY"]
  63 -> 41 [style=solid label="STRINSERT"]
  63 -> 42 [style=solid label="QUOTES"]
  63 -> 43 [style=solid label="'('"]
  63 -> 75 [style=dashed label="simple-expr"]
  63 -> 60 [style=dashed label="var"]
  63 -> 52 [style=dashed label="op-expr"]
  63 -> 53 [style=dashed label="term"]
  63 -> 54 [style=dashed label="call"]
  63 -> 85 [style=dashed label="args"]
  63 -> 77 [style=dashed label="arg-list"]
  63 -> "63R52" [style=solid]
 "63R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 50 call: STRLOWER '(' • args ')'\l"]
  64 -> 28 [style=solid label="INT"]
  64 -> 29 [style=solid label="FLOAT"]
  64 -> 30 [style=solid label="BOOL"]
  64 -> 31 [style=solid label="ID"]
  64 -> 37 [style=solid label="STRUPPER"]
  64 -> 38 [style=solid label="STRLOWER"]
  64 -> 39 [style=solid label="STRCONCAT"]
  64 -> 40 [style=solid label="STRCOPY"]
  64 -> 41 [style=solid label="STRINSERT"]
  64 -> 42 [style=solid label="QUOTES"]
  64 -> 43 [style=solid label="'('"]
  64 -> 75 [style=dashed label="simple-expr"]
  64 -> 60 [style=dashed label="var"]
  64 -> 52 [style=dashed label="op-expr"]
  64 -> 53 [style=dashed label="term"]
  64 -> 54 [style=dashed label="call"]
  64 -> 86 [style=dashed label="args"]
  64 -> 77 [style=dashed label="arg-list"]
  64 -> "64R52" [style=solid]
 "64R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 46 call: STRCONCAT '(' • args ')'\l"]
  65 -> 28 [style=solid label="INT"]
  65 -> 29 [style=solid label="FLOAT"]
  65 -> 30 [style=solid label="BOOL"]
  65 -> 31 [style=solid label="ID"]
  65 -> 37 [style=solid label="STRUPPER"]
  65 -> 38 [style=solid label="STRLOWER"]
  65 -> 39 [style=solid label="STRCONCAT"]
  65 -> 40 [style=solid label="STRCOPY"]
  65 -> 41 [style=solid label="STRINSERT"]
  65 -> 42 [style=solid label="QUOTES"]
  65 -> 43 [style=solid label="'('"]
  65 -> 75 [style=dashed label="simple-expr"]
  65 -> 60 [style=dashed label="var"]
  65 -> 52 [style=dashed label="op-expr"]
  65 -> 53 [style=dashed label="term"]
  65 -> 54 [style=dashed label="call"]
  65 -> 87 [style=dashed label="args"]
  65 -> 77 [style=dashed label="arg-list"]
  65 -> "65R52" [style=solid]
 "65R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  66 [label="Estado 66\n\l 47 call: STRCOPY '(' • args ')'\l"]
  66 -> 28 [style=solid label="INT"]
  66 -> 29 [style=solid label="FLOAT"]
  66 -> 30 [style=solid label="BOOL"]
  66 -> 31 [style=solid label="ID"]
  66 -> 37 [style=solid label="STRUPPER"]
  66 -> 38 [style=solid label="STRLOWER"]
  66 -> 39 [style=solid label="STRCONCAT"]
  66 -> 40 [style=solid label="STRCOPY"]
  66 -> 41 [style=solid label="STRINSERT"]
  66 -> 42 [style=solid label="QUOTES"]
  66 -> 43 [style=solid label="'('"]
  66 -> 75 [style=dashed label="simple-expr"]
  66 -> 60 [style=dashed label="var"]
  66 -> 52 [style=dashed label="op-expr"]
  66 -> 53 [style=dashed label="term"]
  66 -> 54 [style=dashed label="call"]
  66 -> 88 [style=dashed label="args"]
  66 -> 77 [style=dashed label="arg-list"]
  66 -> "66R52" [style=solid]
 "66R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  67 [label="Estado 67\n\l 48 call: STRINSERT '(' • args ')'\l"]
  67 -> 28 [style=solid label="INT"]
  67 -> 29 [style=solid label="FLOAT"]
  67 -> 30 [style=solid label="BOOL"]
  67 -> 31 [style=solid label="ID"]
  67 -> 37 [style=solid label="STRUPPER"]
  67 -> 38 [style=solid label="STRLOWER"]
  67 -> 39 [style=solid label="STRCONCAT"]
  67 -> 40 [style=solid label="STRCOPY"]
  67 -> 41 [style=solid label="STRINSERT"]
  67 -> 42 [style=solid label="QUOTES"]
  67 -> 43 [style=solid label="'('"]
  67 -> 75 [style=dashed label="simple-expr"]
  67 -> 60 [style=dashed label="var"]
  67 -> 52 [style=dashed label="op-expr"]
  67 -> 53 [style=dashed label="term"]
  67 -> 54 [style=dashed label="call"]
  67 -> 89 [style=dashed label="args"]
  67 -> 77 [style=dashed label="arg-list"]
  67 -> "67R52" [style=solid]
 "67R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  68 [label="Estado 68\n\l 41 term: QUOTES string • QUOTES\l 55 string: string • STR\l"]
  68 -> 90 [style=solid label="STR"]
  68 -> 91 [style=solid label="QUOTES"]
  69 [label="Estado 69\n\l 38 term: '(' simple-expr • ')'\l"]
  69 -> 92 [style=solid label="')'"]
  70 [label="Estado 70\n\l 26 expr: simple-expr ';' •\l"]
  70 -> "70R26" [style=solid]
 "70R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  71 [label="Estado 71\n\l 25 expr: var ASSIGN • expr\l"]
  71 -> 28 [style=solid label="INT"]
  71 -> 29 [style=solid label="FLOAT"]
  71 -> 30 [style=solid label="BOOL"]
  71 -> 31 [style=solid label="ID"]
  71 -> 37 [style=solid label="STRUPPER"]
  71 -> 38 [style=solid label="STRLOWER"]
  71 -> 39 [style=solid label="STRCONCAT"]
  71 -> 40 [style=solid label="STRCOPY"]
  71 -> 41 [style=solid label="STRINSERT"]
  71 -> 42 [style=solid label="QUOTES"]
  71 -> 43 [style=solid label="'('"]
  71 -> 93 [style=dashed label="expr"]
  71 -> 47 [style=dashed label="simple-expr"]
  71 -> 51 [style=dashed label="var"]
  71 -> 52 [style=dashed label="op-expr"]
  71 -> 53 [style=dashed label="term"]
  71 -> 54 [style=dashed label="call"]
  72 [label="Estado 72\n\l 35 op-expr: op-expr OP • term\l"]
  72 -> 28 [style=solid label="INT"]
  72 -> 29 [style=solid label="FLOAT"]
  72 -> 30 [style=solid label="BOOL"]
  72 -> 31 [style=solid label="ID"]
  72 -> 37 [style=solid label="STRUPPER"]
  72 -> 38 [style=solid label="STRLOWER"]
  72 -> 39 [style=solid label="STRCONCAT"]
  72 -> 40 [style=solid label="STRCOPY"]
  72 -> 41 [style=solid label="STRINSERT"]
  72 -> 42 [style=solid label="QUOTES"]
  72 -> 43 [style=solid label="'('"]
  72 -> 60 [style=dashed label="var"]
  72 -> 94 [style=dashed label="term"]
  72 -> 54 [style=dashed label="call"]
  73 [label="Estado 73\n\l 27 simple-expr: op-expr RELOP • op-expr\l"]
  73 -> 28 [style=solid label="INT"]
  73 -> 29 [style=solid label="FLOAT"]
  73 -> 30 [style=solid label="BOOL"]
  73 -> 31 [style=solid label="ID"]
  73 -> 37 [style=solid label="STRUPPER"]
  73 -> 38 [style=solid label="STRLOWER"]
  73 -> 39 [style=solid label="STRCONCAT"]
  73 -> 40 [style=solid label="STRCOPY"]
  73 -> 41 [style=solid label="STRINSERT"]
  73 -> 42 [style=solid label="QUOTES"]
  73 -> 43 [style=solid label="'('"]
  73 -> 60 [style=dashed label="var"]
  73 -> 95 [style=dashed label="op-expr"]
  73 -> 53 [style=dashed label="term"]
  73 -> 54 [style=dashed label="call"]
  74 [label="Estado 74\n\l 36 op-expr: op-expr LOG • term\l"]
  74 -> 28 [style=solid label="INT"]
  74 -> 29 [style=solid label="FLOAT"]
  74 -> 30 [style=solid label="BOOL"]
  74 -> 31 [style=solid label="ID"]
  74 -> 37 [style=solid label="STRUPPER"]
  74 -> 38 [style=solid label="STRLOWER"]
  74 -> 39 [style=solid label="STRCONCAT"]
  74 -> 40 [style=solid label="STRCOPY"]
  74 -> 41 [style=solid label="STRINSERT"]
  74 -> 42 [style=solid label="QUOTES"]
  74 -> 43 [style=solid label="'('"]
  74 -> 60 [style=dashed label="var"]
  74 -> 96 [style=dashed label="term"]
  74 -> 54 [style=dashed label="call"]
  75 [label="Estado 75\n\l 53 arg-list: simple-expr • ',' arg-list\l 54         | simple-expr •\l"]
  75 -> 97 [style=solid label="','"]
  75 -> "75R54" [style=solid]
 "75R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  76 [label="Estado 76\n\l 45 call: ID '(' args • ')'\l"]
  76 -> 98 [style=solid label="')'"]
  77 [label="Estado 77\n\l 51 args: arg-list •\l"]
  77 -> "77R51" [style=solid]
 "77R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  78 [label="Estado 78\n\l 29 conditional-stmt: IF '(' simple-expr • ')' comp-stmt\l 30                 | IF '(' simple-expr • ')' comp-stmt ELSE comp-stmt\l"]
  78 -> 99 [style=solid label="')'"]
  79 [label="Estado 79\n\l 31 iteration-stmt: WHILE '(' simple-expr • ')' comp-stmt\l"]
  79 -> 100 [style=solid label="')'"]
  80 [label="Estado 80\n\l 32 return-stmt: RETURN simple-expr ';' •\l"]
  80 -> "80R32" [style=solid]
 "80R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 34 var: ID •\l"]
  81 -> "81R34" [style=solid]
 "81R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 22 stmt: PRINT '(' QUOTES • string QUOTES ')' ';'\l"]
  82 -> 101 [style=dashed label="string"]
  82 -> "82R56" [style=solid]
 "82R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 23 stmt: PRINT '(' var • ')' ';'\l"]
  83 -> 102 [style=solid label="')'"]
  84 [label="Estado 84\n\l 24 stmt: SCAN '(' var • ')' ';'\l"]
  84 -> 103 [style=solid label="')'"]
  85 [label="Estado 85\n\l 49 call: STRUPPER '(' args • ')'\l"]
  85 -> 104 [style=solid label="')'"]
  86 [label="Estado 86\n\l 50 call: STRLOWER '(' args • ')'\l"]
  86 -> 105 [style=solid label="')'"]
  87 [label="Estado 87\n\l 46 call: STRCONCAT '(' args • ')'\l"]
  87 -> 106 [style=solid label="')'"]
  88 [label="Estado 88\n\l 47 call: STRCOPY '(' args • ')'\l"]
  88 -> 107 [style=solid label="')'"]
  89 [label="Estado 89\n\l 48 call: STRINSERT '(' args • ')'\l"]
  89 -> 108 [style=solid label="')'"]
  90 [label="Estado 90\n\l 55 string: string STR •\l"]
  90 -> "90R55" [style=solid]
 "90R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  91 [label="Estado 91\n\l 41 term: QUOTES string QUOTES •\l"]
  91 -> "91R41" [style=solid]
 "91R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  92 [label="Estado 92\n\l 38 term: '(' simple-expr ')' •\l"]
  92 -> "92R38" [style=solid]
 "92R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  93 [label="Estado 93\n\l 25 expr: var ASSIGN expr •\l"]
  93 -> "93R25" [style=solid]
 "93R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l 35 op-expr: op-expr OP term •\l"]
  94 -> "94R35" [style=solid]
 "94R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  95 [label="Estado 95\n\l 27 simple-expr: op-expr RELOP op-expr •\l 35 op-expr: op-expr • OP term\l 36        | op-expr • LOG term\l"]
  95 -> 72 [style=solid label="OP"]
  95 -> 74 [style=solid label="LOG"]
  95 -> "95R27" [style=solid]
 "95R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  96 [label="Estado 96\n\l 36 op-expr: op-expr LOG term •\l"]
  96 -> "96R36" [style=solid]
 "96R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 53 arg-list: simple-expr ',' • arg-list\l"]
  97 -> 28 [style=solid label="INT"]
  97 -> 29 [style=solid label="FLOAT"]
  97 -> 30 [style=solid label="BOOL"]
  97 -> 31 [style=solid label="ID"]
  97 -> 37 [style=solid label="STRUPPER"]
  97 -> 38 [style=solid label="STRLOWER"]
  97 -> 39 [style=solid label="STRCONCAT"]
  97 -> 40 [style=solid label="STRCOPY"]
  97 -> 41 [style=solid label="STRINSERT"]
  97 -> 42 [style=solid label="QUOTES"]
  97 -> 43 [style=solid label="'('"]
  97 -> 75 [style=dashed label="simple-expr"]
  97 -> 60 [style=dashed label="var"]
  97 -> 52 [style=dashed label="op-expr"]
  97 -> 53 [style=dashed label="term"]
  97 -> 54 [style=dashed label="call"]
  97 -> 109 [style=dashed label="arg-list"]
  98 [label="Estado 98\n\l 45 call: ID '(' args ')' •\l"]
  98 -> "98R45" [style=solid]
 "98R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  99 [label="Estado 99\n\l 29 conditional-stmt: IF '(' simple-expr ')' • comp-stmt\l 30                 | IF '(' simple-expr ')' • comp-stmt ELSE comp-stmt\l"]
  99 -> 19 [style=solid label="'{'"]
  99 -> 110 [style=dashed label="comp-stmt"]
  100 [label="Estado 100\n\l 31 iteration-stmt: WHILE '(' simple-expr ')' • comp-stmt\l"]
  100 -> 19 [style=solid label="'{'"]
  100 -> 111 [style=dashed label="comp-stmt"]
  101 [label="Estado 101\n\l 22 stmt: PRINT '(' QUOTES string • QUOTES ')' ';'\l 55 string: string • STR\l"]
  101 -> 90 [style=solid label="STR"]
  101 -> 112 [style=solid label="QUOTES"]
  102 [label="Estado 102\n\l 23 stmt: PRINT '(' var ')' • ';'\l"]
  102 -> 113 [style=solid label="';'"]
  103 [label="Estado 103\n\l 24 stmt: SCAN '(' var ')' • ';'\l"]
  103 -> 114 [style=solid label="';'"]
  104 [label="Estado 104\n\l 49 call: STRUPPER '(' args ')' •\l"]
  104 -> "104R49" [style=solid]
 "104R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  105 [label="Estado 105\n\l 50 call: STRLOWER '(' args ')' •\l"]
  105 -> "105R50" [style=solid]
 "105R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  106 [label="Estado 106\n\l 46 call: STRCONCAT '(' args ')' •\l"]
  106 -> "106R46" [style=solid]
 "106R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  107 [label="Estado 107\n\l 47 call: STRCOPY '(' args ')' •\l"]
  107 -> "107R47" [style=solid]
 "107R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  108 [label="Estado 108\n\l 48 call: STRINSERT '(' args ')' •\l"]
  108 -> "108R48" [style=solid]
 "108R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  109 [label="Estado 109\n\l 53 arg-list: simple-expr ',' arg-list •\l"]
  109 -> "109R53" [style=solid]
 "109R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l 29 conditional-stmt: IF '(' simple-expr ')' comp-stmt •\l 30                 | IF '(' simple-expr ')' comp-stmt • ELSE comp-stmt\l"]
  110 -> 115 [style=solid label="ELSE"]
  110 -> "110R29" [style=solid]
 "110R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l 31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt •\l"]
  111 -> "111R31" [style=solid]
 "111R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 22 stmt: PRINT '(' QUOTES string QUOTES • ')' ';'\l"]
  112 -> 116 [style=solid label="')'"]
  113 [label="Estado 113\n\l 23 stmt: PRINT '(' var ')' ';' •\l"]
  113 -> "113R23" [style=solid]
 "113R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 24 stmt: SCAN '(' var ')' ';' •\l"]
  114 -> "114R24" [style=solid]
 "114R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  115 [label="Estado 115\n\l 30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE • comp-stmt\l"]
  115 -> 19 [style=solid label="'{'"]
  115 -> 117 [style=dashed label="comp-stmt"]
  116 [label="Estado 116\n\l 22 stmt: PRINT '(' QUOTES string QUOTES ')' • ';'\l"]
  116 -> 118 [style=solid label="';'"]
  117 [label="Estado 117\n\l 30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt •\l"]
  117 -> "117R30" [style=solid]
 "117R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  118 [label="Estado 118\n\l 22 stmt: PRINT '(' QUOTES string QUOTES ')' ';' •\l"]
  118 -> "118R22" [style=solid]
 "118R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
}
