Gramática

    0 $accept: prog $end

    1 prog: decl-list

    2 decl-list: decl-list var-decl
    3          | var-decl
    4          | decl-list func
    5          | func

    6 var-decl: TYPE ID ';'

    7 func: TYPE ID '(' params ')' comp-stmt

    8 params: params ',' TYPE ID
    9       | TYPE ID
   10       | %empty

   11 comp-stmt: '{' local-decl stmt-list '}'

   12 local-decl: local-decl TYPE ID ';'
   13           | %empty

   14 stmt-list: stmt-list stmt
   15          | %empty

   16 stmt: expr
   17     | conditional-stmt
   18     | iteration-stmt
   19     | return-stmt
   20     | PRINT '(' QUOTES string QUOTES ')' ';'
   21     | PRINT '(' ID ')' ';'
   22     | SCAN '(' ID ')' ';'

   23 expr: var ASSIGN expr
   24     | simple-expr ';'

   25 simple-expr: op-expr RELOP op-expr
   26            | op-expr
   27            | op-log

   28 conditional-stmt: IF '(' simple-expr ')' comp-stmt
   29                 | IF '(' simple-expr ')' comp-stmt ELSE comp-stmt

   30 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt

   31 return-stmt: RETURN simple-expr ';'
   32            | RETURN ';'

   33 var: ID

   34 op-expr: op-expr OP term
   35        | term

   36 op-log: op-log LOG term
   37       | BOOL

   38 term: '(' simple-expr ')'
   39     | var
   40     | call
   41     | QUOTES string QUOTES
   42     | INT
   43     | FLOAT

   44 call: ID '(' args ')'
   45     | STRCONCAT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'
   46     | STRCOMPARE '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'
   47     | STRCOPY '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'
   48     | STRINSERT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ',' ID ')'
   49     | STRUPPER '(' QUOTES string QUOTES ')'
   50     | STRUPPER '(' ID ')'
   51     | STRLOWER '(' QUOTES string QUOTES ')'
   52     | STRLOWER '(' ID ')'

   53 args: arg-list
   54     | %empty

   55 arg-list: arg-list ',' simple-expr
   56         | simple-expr

   57 string: string STR
   58       | %empty


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 7 20 21 22 28 29 30 38 44 45 46 47 48 49 50 51 52
')' (41) 7 20 21 22 28 29 30 38 44 45 46 47 48 49 50 51 52
',' (44) 8 45 46 47 48 55
';' (59) 6 12 20 21 22 24 31 32
'{' (123) 11
'}' (125) 11
error (256)
INT (258) 42
FLOAT (259) 43
BOOL (260) 37
STR (261) 57
TYPE (262) 6 7 8 9 12
ID (263) 6 7 8 9 12 21 22 33 44 48 50 52
IF (264) 28 29
ELSE (265) 29
WHILE (266) 30
RETURN (267) 31 32
PRINT (268) 20 21
SCAN (269) 22
STRUPPER (270) 49 50
STRLOWER (271) 51 52
STRCONCAT (272) 45
STRCOMPARE (273) 46
STRCOPY (274) 47
STRINSERT (275) 48
QUOTES (276) 20 41 45 46 47 48 49 51
ASSIGN (277) 23
OP (278) 34
RELOP (279) 25
LOG (280) 36


Não terminais com as regras onde eles aparecem

$accept (32)
    à esquerda: 0
prog (33)
    à esquerda: 1, à direita: 0
decl-list (34)
    à esquerda: 2 3 4 5, à direita: 1 2 4
var-decl (35)
    à esquerda: 6, à direita: 2 3
func (36)
    à esquerda: 7, à direita: 4 5
params (37)
    à esquerda: 8 9 10, à direita: 7 8
comp-stmt (38)
    à esquerda: 11, à direita: 7 28 29 30
local-decl (39)
    à esquerda: 12 13, à direita: 11 12
stmt-list (40)
    à esquerda: 14 15, à direita: 11 14
stmt (41)
    à esquerda: 16 17 18 19 20 21 22, à direita: 14
expr (42)
    à esquerda: 23 24, à direita: 16 23
simple-expr (43)
    à esquerda: 25 26 27, à direita: 24 28 29 30 31 38 55 56
conditional-stmt (44)
    à esquerda: 28 29, à direita: 17
iteration-stmt (45)
    à esquerda: 30, à direita: 18
return-stmt (46)
    à esquerda: 31 32, à direita: 19
var (47)
    à esquerda: 33, à direita: 23 39
op-expr (48)
    à esquerda: 34 35, à direita: 25 26 34
op-log (49)
    à esquerda: 36 37, à direita: 27 36
term (50)
    à esquerda: 38 39 40 41 42 43, à direita: 34 35 36
call (51)
    à esquerda: 44 45 46 47 48 49 50 51 52, à direita: 40
args (52)
    à esquerda: 53 54, à direita: 44
arg-list (53)
    à esquerda: 55 56, à direita: 53 55
string (54)
    à esquerda: 57 58, à direita: 20 41 45 46 47 48 49 51 57


Estado 0

    0 $accept: . prog $end

    TYPE  deslocar, e ir ao estado 1

    prog       ir ao estado 2
    decl-list  ir ao estado 3
    var-decl   ir ao estado 4
    func       ir ao estado 5


Estado 1

    6 var-decl: TYPE . ID ';'
    7 func: TYPE . ID '(' params ')' comp-stmt

    ID  deslocar, e ir ao estado 6


Estado 2

    0 $accept: prog . $end

    $end  deslocar, e ir ao estado 7


Estado 3

    1 prog: decl-list .
    2 decl-list: decl-list . var-decl
    4          | decl-list . func

    TYPE  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (prog)

    var-decl  ir ao estado 8
    func      ir ao estado 9


Estado 4

    3 decl-list: var-decl .

    $padrão  reduzir usando a regra 3 (decl-list)


Estado 5

    5 decl-list: func .

    $padrão  reduzir usando a regra 5 (decl-list)


Estado 6

    6 var-decl: TYPE ID . ';'
    7 func: TYPE ID . '(' params ')' comp-stmt

    ';'  deslocar, e ir ao estado 10
    '('  deslocar, e ir ao estado 11


Estado 7

    0 $accept: prog $end .

    $padrão  aceitar


Estado 8

    2 decl-list: decl-list var-decl .

    $padrão  reduzir usando a regra 2 (decl-list)


Estado 9

    4 decl-list: decl-list func .

    $padrão  reduzir usando a regra 4 (decl-list)


Estado 10

    6 var-decl: TYPE ID ';' .

    $padrão  reduzir usando a regra 6 (var-decl)


Estado 11

    7 func: TYPE ID '(' . params ')' comp-stmt

    TYPE  deslocar, e ir ao estado 12

    $padrão  reduzir usando a regra 10 (params)

    params  ir ao estado 13


Estado 12

    9 params: TYPE . ID

    ID  deslocar, e ir ao estado 14


Estado 13

    7 func: TYPE ID '(' params . ')' comp-stmt
    8 params: params . ',' TYPE ID

    ')'  deslocar, e ir ao estado 15
    ','  deslocar, e ir ao estado 16


Estado 14

    9 params: TYPE ID .

    $padrão  reduzir usando a regra 9 (params)


Estado 15

    7 func: TYPE ID '(' params ')' . comp-stmt

    '{'  deslocar, e ir ao estado 17

    comp-stmt  ir ao estado 18


Estado 16

    8 params: params ',' . TYPE ID

    TYPE  deslocar, e ir ao estado 19


Estado 17

   11 comp-stmt: '{' . local-decl stmt-list '}'

    $padrão  reduzir usando a regra 13 (local-decl)

    local-decl  ir ao estado 20


Estado 18

    7 func: TYPE ID '(' params ')' comp-stmt .

    $padrão  reduzir usando a regra 7 (func)


Estado 19

    8 params: params ',' TYPE . ID

    ID  deslocar, e ir ao estado 21


Estado 20

   11 comp-stmt: '{' local-decl . stmt-list '}'
   12 local-decl: local-decl . TYPE ID ';'

    TYPE  deslocar, e ir ao estado 22

    $padrão  reduzir usando a regra 15 (stmt-list)

    stmt-list  ir ao estado 23


Estado 21

    8 params: params ',' TYPE ID .

    $padrão  reduzir usando a regra 8 (params)


Estado 22

   12 local-decl: local-decl TYPE . ID ';'

    ID  deslocar, e ir ao estado 24


Estado 23

   11 comp-stmt: '{' local-decl stmt-list . '}'
   14 stmt-list: stmt-list . stmt

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    IF          deslocar, e ir ao estado 29
    WHILE       deslocar, e ir ao estado 30
    RETURN      deslocar, e ir ao estado 31
    PRINT       deslocar, e ir ao estado 32
    SCAN        deslocar, e ir ao estado 33
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41
    '}'         deslocar, e ir ao estado 42

    stmt              ir ao estado 43
    expr              ir ao estado 44
    simple-expr       ir ao estado 45
    conditional-stmt  ir ao estado 46
    iteration-stmt    ir ao estado 47
    return-stmt       ir ao estado 48
    var               ir ao estado 49
    op-expr           ir ao estado 50
    op-log            ir ao estado 51
    term              ir ao estado 52
    call              ir ao estado 53


Estado 24

   12 local-decl: local-decl TYPE ID . ';'

    ';'  deslocar, e ir ao estado 54


Estado 25

   42 term: INT .

    $padrão  reduzir usando a regra 42 (term)


Estado 26

   43 term: FLOAT .

    $padrão  reduzir usando a regra 43 (term)


Estado 27

   37 op-log: BOOL .

    $padrão  reduzir usando a regra 37 (op-log)


Estado 28

   33 var: ID .
   44 call: ID . '(' args ')'

    '('  deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 33 (var)


Estado 29

   28 conditional-stmt: IF . '(' simple-expr ')' comp-stmt
   29                 | IF . '(' simple-expr ')' comp-stmt ELSE comp-stmt

    '('  deslocar, e ir ao estado 56


Estado 30

   30 iteration-stmt: WHILE . '(' simple-expr ')' comp-stmt

    '('  deslocar, e ir ao estado 57


Estado 31

   31 return-stmt: RETURN . simple-expr ';'
   32            | RETURN . ';'

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    ';'         deslocar, e ir ao estado 58
    '('         deslocar, e ir ao estado 41

    simple-expr  ir ao estado 59
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 32

   20 stmt: PRINT . '(' QUOTES string QUOTES ')' ';'
   21     | PRINT . '(' ID ')' ';'

    '('  deslocar, e ir ao estado 61


Estado 33

   22 stmt: SCAN . '(' ID ')' ';'

    '('  deslocar, e ir ao estado 62


Estado 34

   49 call: STRUPPER . '(' QUOTES string QUOTES ')'
   50     | STRUPPER . '(' ID ')'

    '('  deslocar, e ir ao estado 63


Estado 35

   51 call: STRLOWER . '(' QUOTES string QUOTES ')'
   52     | STRLOWER . '(' ID ')'

    '('  deslocar, e ir ao estado 64


Estado 36

   45 call: STRCONCAT . '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    '('  deslocar, e ir ao estado 65


Estado 37

   46 call: STRCOMPARE . '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    '('  deslocar, e ir ao estado 66


Estado 38

   47 call: STRCOPY . '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    '('  deslocar, e ir ao estado 67


Estado 39

   48 call: STRINSERT . '(' QUOTES string QUOTES ',' QUOTES string QUOTES ',' ID ')'

    '('  deslocar, e ir ao estado 68


Estado 40

   41 term: QUOTES . string QUOTES

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 69


Estado 41

   38 term: '(' . simple-expr ')'

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    simple-expr  ir ao estado 70
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 42

   11 comp-stmt: '{' local-decl stmt-list '}' .

    $padrão  reduzir usando a regra 11 (comp-stmt)


Estado 43

   14 stmt-list: stmt-list stmt .

    $padrão  reduzir usando a regra 14 (stmt-list)


Estado 44

   16 stmt: expr .

    $padrão  reduzir usando a regra 16 (stmt)


Estado 45

   24 expr: simple-expr . ';'

    ';'  deslocar, e ir ao estado 71


Estado 46

   17 stmt: conditional-stmt .

    $padrão  reduzir usando a regra 17 (stmt)


Estado 47

   18 stmt: iteration-stmt .

    $padrão  reduzir usando a regra 18 (stmt)


Estado 48

   19 stmt: return-stmt .

    $padrão  reduzir usando a regra 19 (stmt)


Estado 49

   23 expr: var . ASSIGN expr
   39 term: var .

    ASSIGN  deslocar, e ir ao estado 72

    $padrão  reduzir usando a regra 39 (term)


Estado 50

   25 simple-expr: op-expr . RELOP op-expr
   26            | op-expr .
   34 op-expr: op-expr . OP term

    OP     deslocar, e ir ao estado 73
    RELOP  deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 26 (simple-expr)


Estado 51

   27 simple-expr: op-log .
   36 op-log: op-log . LOG term

    LOG  deslocar, e ir ao estado 75

    $padrão  reduzir usando a regra 27 (simple-expr)


Estado 52

   35 op-expr: term .

    $padrão  reduzir usando a regra 35 (op-expr)


Estado 53

   40 term: call .

    $padrão  reduzir usando a regra 40 (term)


Estado 54

   12 local-decl: local-decl TYPE ID ';' .

    $padrão  reduzir usando a regra 12 (local-decl)


Estado 55

   44 call: ID '(' . args ')'

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 54 (args)

    simple-expr  ir ao estado 76
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 77
    arg-list     ir ao estado 78


Estado 56

   28 conditional-stmt: IF '(' . simple-expr ')' comp-stmt
   29                 | IF '(' . simple-expr ')' comp-stmt ELSE comp-stmt

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    simple-expr  ir ao estado 79
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 57

   30 iteration-stmt: WHILE '(' . simple-expr ')' comp-stmt

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    simple-expr  ir ao estado 80
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 58

   32 return-stmt: RETURN ';' .

    $padrão  reduzir usando a regra 32 (return-stmt)


Estado 59

   31 return-stmt: RETURN simple-expr . ';'

    ';'  deslocar, e ir ao estado 81


Estado 60

   39 term: var .

    $padrão  reduzir usando a regra 39 (term)


Estado 61

   20 stmt: PRINT '(' . QUOTES string QUOTES ')' ';'
   21     | PRINT '(' . ID ')' ';'

    ID      deslocar, e ir ao estado 82
    QUOTES  deslocar, e ir ao estado 83


Estado 62

   22 stmt: SCAN '(' . ID ')' ';'

    ID  deslocar, e ir ao estado 84


Estado 63

   49 call: STRUPPER '(' . QUOTES string QUOTES ')'
   50     | STRUPPER '(' . ID ')'

    ID      deslocar, e ir ao estado 85
    QUOTES  deslocar, e ir ao estado 86


Estado 64

   51 call: STRLOWER '(' . QUOTES string QUOTES ')'
   52     | STRLOWER '(' . ID ')'

    ID      deslocar, e ir ao estado 87
    QUOTES  deslocar, e ir ao estado 88


Estado 65

   45 call: STRCONCAT '(' . QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 89


Estado 66

   46 call: STRCOMPARE '(' . QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 90


Estado 67

   47 call: STRCOPY '(' . QUOTES string QUOTES ',' QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 91


Estado 68

   48 call: STRINSERT '(' . QUOTES string QUOTES ',' QUOTES string QUOTES ',' ID ')'

    QUOTES  deslocar, e ir ao estado 92


Estado 69

   41 term: QUOTES string . QUOTES
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 94


Estado 70

   38 term: '(' simple-expr . ')'

    ')'  deslocar, e ir ao estado 95


Estado 71

   24 expr: simple-expr ';' .

    $padrão  reduzir usando a regra 24 (expr)


Estado 72

   23 expr: var ASSIGN . expr

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    expr         ir ao estado 96
    simple-expr  ir ao estado 45
    var          ir ao estado 49
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 73

   34 op-expr: op-expr OP . term

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    var   ir ao estado 60
    term  ir ao estado 97
    call  ir ao estado 53


Estado 74

   25 simple-expr: op-expr RELOP . op-expr

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    var      ir ao estado 60
    op-expr  ir ao estado 98
    term     ir ao estado 52
    call     ir ao estado 53


Estado 75

   36 op-log: op-log LOG . term

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    var   ir ao estado 60
    term  ir ao estado 99
    call  ir ao estado 53


Estado 76

   56 arg-list: simple-expr .

    $padrão  reduzir usando a regra 56 (arg-list)


Estado 77

   44 call: ID '(' args . ')'

    ')'  deslocar, e ir ao estado 100


Estado 78

   53 args: arg-list .
   55 arg-list: arg-list . ',' simple-expr

    ','  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 53 (args)


Estado 79

   28 conditional-stmt: IF '(' simple-expr . ')' comp-stmt
   29                 | IF '(' simple-expr . ')' comp-stmt ELSE comp-stmt

    ')'  deslocar, e ir ao estado 102


Estado 80

   30 iteration-stmt: WHILE '(' simple-expr . ')' comp-stmt

    ')'  deslocar, e ir ao estado 103


Estado 81

   31 return-stmt: RETURN simple-expr ';' .

    $padrão  reduzir usando a regra 31 (return-stmt)


Estado 82

   21 stmt: PRINT '(' ID . ')' ';'

    ')'  deslocar, e ir ao estado 104


Estado 83

   20 stmt: PRINT '(' QUOTES . string QUOTES ')' ';'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 105


Estado 84

   22 stmt: SCAN '(' ID . ')' ';'

    ')'  deslocar, e ir ao estado 106


Estado 85

   50 call: STRUPPER '(' ID . ')'

    ')'  deslocar, e ir ao estado 107


Estado 86

   49 call: STRUPPER '(' QUOTES . string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 108


Estado 87

   52 call: STRLOWER '(' ID . ')'

    ')'  deslocar, e ir ao estado 109


Estado 88

   51 call: STRLOWER '(' QUOTES . string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 110


Estado 89

   45 call: STRCONCAT '(' QUOTES . string QUOTES ',' QUOTES string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 111


Estado 90

   46 call: STRCOMPARE '(' QUOTES . string QUOTES ',' QUOTES string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 112


Estado 91

   47 call: STRCOPY '(' QUOTES . string QUOTES ',' QUOTES string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 113


Estado 92

   48 call: STRINSERT '(' QUOTES . string QUOTES ',' QUOTES string QUOTES ',' ID ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 114


Estado 93

   57 string: string STR .

    $padrão  reduzir usando a regra 57 (string)


Estado 94

   41 term: QUOTES string QUOTES .

    $padrão  reduzir usando a regra 41 (term)


Estado 95

   38 term: '(' simple-expr ')' .

    $padrão  reduzir usando a regra 38 (term)


Estado 96

   23 expr: var ASSIGN expr .

    $padrão  reduzir usando a regra 23 (expr)


Estado 97

   34 op-expr: op-expr OP term .

    $padrão  reduzir usando a regra 34 (op-expr)


Estado 98

   25 simple-expr: op-expr RELOP op-expr .
   34 op-expr: op-expr . OP term

    OP  deslocar, e ir ao estado 73

    $padrão  reduzir usando a regra 25 (simple-expr)


Estado 99

   36 op-log: op-log LOG term .

    $padrão  reduzir usando a regra 36 (op-log)


Estado 100

   44 call: ID '(' args ')' .

    $padrão  reduzir usando a regra 44 (call)


Estado 101

   55 arg-list: arg-list ',' . simple-expr

    INT         deslocar, e ir ao estado 25
    FLOAT       deslocar, e ir ao estado 26
    BOOL        deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 28
    STRUPPER    deslocar, e ir ao estado 34
    STRLOWER    deslocar, e ir ao estado 35
    STRCONCAT   deslocar, e ir ao estado 36
    STRCOMPARE  deslocar, e ir ao estado 37
    STRCOPY     deslocar, e ir ao estado 38
    STRINSERT   deslocar, e ir ao estado 39
    QUOTES      deslocar, e ir ao estado 40
    '('         deslocar, e ir ao estado 41

    simple-expr  ir ao estado 115
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 102

   28 conditional-stmt: IF '(' simple-expr ')' . comp-stmt
   29                 | IF '(' simple-expr ')' . comp-stmt ELSE comp-stmt

    '{'  deslocar, e ir ao estado 17

    comp-stmt  ir ao estado 116


Estado 103

   30 iteration-stmt: WHILE '(' simple-expr ')' . comp-stmt

    '{'  deslocar, e ir ao estado 17

    comp-stmt  ir ao estado 117


Estado 104

   21 stmt: PRINT '(' ID ')' . ';'

    ';'  deslocar, e ir ao estado 118


Estado 105

   20 stmt: PRINT '(' QUOTES string . QUOTES ')' ';'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 119


Estado 106

   22 stmt: SCAN '(' ID ')' . ';'

    ';'  deslocar, e ir ao estado 120


Estado 107

   50 call: STRUPPER '(' ID ')' .

    $padrão  reduzir usando a regra 50 (call)


Estado 108

   49 call: STRUPPER '(' QUOTES string . QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 121


Estado 109

   52 call: STRLOWER '(' ID ')' .

    $padrão  reduzir usando a regra 52 (call)


Estado 110

   51 call: STRLOWER '(' QUOTES string . QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 122


Estado 111

   45 call: STRCONCAT '(' QUOTES string . QUOTES ',' QUOTES string QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 123


Estado 112

   46 call: STRCOMPARE '(' QUOTES string . QUOTES ',' QUOTES string QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 124


Estado 113

   47 call: STRCOPY '(' QUOTES string . QUOTES ',' QUOTES string QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 125


Estado 114

   48 call: STRINSERT '(' QUOTES string . QUOTES ',' QUOTES string QUOTES ',' ID ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 126


Estado 115

   55 arg-list: arg-list ',' simple-expr .

    $padrão  reduzir usando a regra 55 (arg-list)


Estado 116

   28 conditional-stmt: IF '(' simple-expr ')' comp-stmt .
   29                 | IF '(' simple-expr ')' comp-stmt . ELSE comp-stmt

    ELSE  deslocar, e ir ao estado 127

    $padrão  reduzir usando a regra 28 (conditional-stmt)


Estado 117

   30 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt .

    $padrão  reduzir usando a regra 30 (iteration-stmt)


Estado 118

   21 stmt: PRINT '(' ID ')' ';' .

    $padrão  reduzir usando a regra 21 (stmt)


Estado 119

   20 stmt: PRINT '(' QUOTES string QUOTES . ')' ';'

    ')'  deslocar, e ir ao estado 128


Estado 120

   22 stmt: SCAN '(' ID ')' ';' .

    $padrão  reduzir usando a regra 22 (stmt)


Estado 121

   49 call: STRUPPER '(' QUOTES string QUOTES . ')'

    ')'  deslocar, e ir ao estado 129


Estado 122

   51 call: STRLOWER '(' QUOTES string QUOTES . ')'

    ')'  deslocar, e ir ao estado 130


Estado 123

   45 call: STRCONCAT '(' QUOTES string QUOTES . ',' QUOTES string QUOTES ')'

    ','  deslocar, e ir ao estado 131


Estado 124

   46 call: STRCOMPARE '(' QUOTES string QUOTES . ',' QUOTES string QUOTES ')'

    ','  deslocar, e ir ao estado 132


Estado 125

   47 call: STRCOPY '(' QUOTES string QUOTES . ',' QUOTES string QUOTES ')'

    ','  deslocar, e ir ao estado 133


Estado 126

   48 call: STRINSERT '(' QUOTES string QUOTES . ',' QUOTES string QUOTES ',' ID ')'

    ','  deslocar, e ir ao estado 134


Estado 127

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE . comp-stmt

    '{'  deslocar, e ir ao estado 17

    comp-stmt  ir ao estado 135


Estado 128

   20 stmt: PRINT '(' QUOTES string QUOTES ')' . ';'

    ';'  deslocar, e ir ao estado 136


Estado 129

   49 call: STRUPPER '(' QUOTES string QUOTES ')' .

    $padrão  reduzir usando a regra 49 (call)


Estado 130

   51 call: STRLOWER '(' QUOTES string QUOTES ')' .

    $padrão  reduzir usando a regra 51 (call)


Estado 131

   45 call: STRCONCAT '(' QUOTES string QUOTES ',' . QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 137


Estado 132

   46 call: STRCOMPARE '(' QUOTES string QUOTES ',' . QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 138


Estado 133

   47 call: STRCOPY '(' QUOTES string QUOTES ',' . QUOTES string QUOTES ')'

    QUOTES  deslocar, e ir ao estado 139


Estado 134

   48 call: STRINSERT '(' QUOTES string QUOTES ',' . QUOTES string QUOTES ',' ID ')'

    QUOTES  deslocar, e ir ao estado 140


Estado 135

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt .

    $padrão  reduzir usando a regra 29 (conditional-stmt)


Estado 136

   20 stmt: PRINT '(' QUOTES string QUOTES ')' ';' .

    $padrão  reduzir usando a regra 20 (stmt)


Estado 137

   45 call: STRCONCAT '(' QUOTES string QUOTES ',' QUOTES . string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 141


Estado 138

   46 call: STRCOMPARE '(' QUOTES string QUOTES ',' QUOTES . string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 142


Estado 139

   47 call: STRCOPY '(' QUOTES string QUOTES ',' QUOTES . string QUOTES ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 143


Estado 140

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES . string QUOTES ',' ID ')'

    $padrão  reduzir usando a regra 58 (string)

    string  ir ao estado 144


Estado 141

   45 call: STRCONCAT '(' QUOTES string QUOTES ',' QUOTES string . QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 145


Estado 142

   46 call: STRCOMPARE '(' QUOTES string QUOTES ',' QUOTES string . QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 146


Estado 143

   47 call: STRCOPY '(' QUOTES string QUOTES ',' QUOTES string . QUOTES ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 147


Estado 144

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES string . QUOTES ',' ID ')'
   57 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 148


Estado 145

   45 call: STRCONCAT '(' QUOTES string QUOTES ',' QUOTES string QUOTES . ')'

    ')'  deslocar, e ir ao estado 149


Estado 146

   46 call: STRCOMPARE '(' QUOTES string QUOTES ',' QUOTES string QUOTES . ')'

    ')'  deslocar, e ir ao estado 150


Estado 147

   47 call: STRCOPY '(' QUOTES string QUOTES ',' QUOTES string QUOTES . ')'

    ')'  deslocar, e ir ao estado 151


Estado 148

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES string QUOTES . ',' ID ')'

    ','  deslocar, e ir ao estado 152


Estado 149

   45 call: STRCONCAT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')' .

    $padrão  reduzir usando a regra 45 (call)


Estado 150

   46 call: STRCOMPARE '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')' .

    $padrão  reduzir usando a regra 46 (call)


Estado 151

   47 call: STRCOPY '(' QUOTES string QUOTES ',' QUOTES string QUOTES ')' .

    $padrão  reduzir usando a regra 47 (call)


Estado 152

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ',' . ID ')'

    ID  deslocar, e ir ao estado 153


Estado 153

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ',' ID . ')'

    ')'  deslocar, e ir ao estado 154


Estado 154

   48 call: STRINSERT '(' QUOTES string QUOTES ',' QUOTES string QUOTES ',' ID ')' .

    $padrão  reduzir usando a regra 48 (call)
