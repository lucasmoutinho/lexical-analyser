Gramática

    0 $accept: prog $end

    1 prog: decl-list

    2 decl-list: decl-list var-decl
    3          | var-decl
    4          | decl-list func
    5          | func

    6 var-decl: TYPE ID ';'

    7 $@1: %empty

    8 func: TYPE ID $@1 '(' params-list ')' comp-stmt

    9 params-list: params
   10            | %empty

   11 params: params ',' TYPE ID
   12       | TYPE ID

   13 comp-stmt: '{' local-decl stmt-list '}'

   14 local-decl: local-decl var-decl
   15           | %empty

   16 stmt-list: stmt-list stmt
   17          | %empty

   18 stmt: expr
   19     | conditional-stmt
   20     | iteration-stmt
   21     | return-stmt
   22     | PRINT '(' QUOTES string QUOTES ')' ';'
   23     | PRINT '(' var ')' ';'
   24     | SCAN '(' var ')' ';'

   25 expr: var ASSIGN expr
   26     | simple-expr ';'

   27 simple-expr: op-expr RELOP op-expr
   28            | op-expr

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt
   30                 | IF '(' simple-expr ')' comp-stmt ELSE comp-stmt

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt

   32 return-stmt: RETURN simple-expr ';'
   33            | RETURN ';'

   34 var: ID

   35 op-expr: op-expr OP term
   36        | op-expr LOG term
   37        | term

   38 term: '(' simple-expr ')'
   39     | var
   40     | call
   41     | QUOTES string QUOTES
   42     | INT
   43     | FLOAT
   44     | BOOL

   45 call: ID '(' args ')'
   46     | STRCONCAT '(' args ')'
   47     | STRCOPY '(' args ')'
   48     | STRINSERT '(' args ')'
   49     | STRUPPER '(' args ')'
   50     | STRLOWER '(' args ')'

   51 args: arg-list
   52     | %empty

   53 arg-list: simple-expr ',' arg-list
   54         | simple-expr

   55 string: string STR
   56       | %empty


Terminais, com as regras onde eles aparecem

    $end (0) 0
    '(' (40) 8 22 23 24 29 30 31 38 45 46 47 48 49 50
    ')' (41) 8 22 23 24 29 30 31 38 45 46 47 48 49 50
    ',' (44) 11 53
    ';' (59) 6 22 23 24 26 32 33
    '{' (123) 13
    '}' (125) 13
    error (256)
    INT <str> (258) 42
    FLOAT <str> (259) 43
    BOOL <str> (260) 44
    STR <str> (261) 55
    TYPE <str> (262) 6 8 11 12
    ID <str> (263) 6 8 11 12 34 45
    IF <str> (264) 29 30
    ELSE <str> (265) 30
    WHILE <str> (266) 31
    RETURN <str> (267) 32 33
    PRINT <str> (268) 22 23
    SCAN <str> (269) 24
    STRUPPER <str> (270) 49
    STRLOWER <str> (271) 50
    STRCONCAT <str> (272) 46
    STRCOPY <str> (273) 47
    STRINSERT <str> (274) 48
    QUOTES <str> (275) 22 41
    ASSIGN <str> (276) 25
    OP <str> (277) 35
    RELOP <str> (278) 27
    LOG <str> (279) 36


Não terminais com as regras onde eles aparecem

    $accept (31)
        à esquerda: 0
    prog <no> (32)
        à esquerda: 1
        à direita: 0
    decl-list <no> (33)
        à esquerda: 2 3 4 5
        à direita: 1 2 4
    var-decl <no> (34)
        à esquerda: 6
        à direita: 2 3 14
    func <no> (35)
        à esquerda: 8
        à direita: 4 5
    $@1 (36)
        à esquerda: 7
        à direita: 8
    params-list <no> (37)
        à esquerda: 9 10
        à direita: 8
    params <no> (38)
        à esquerda: 11 12
        à direita: 9 11
    comp-stmt <no> (39)
        à esquerda: 13
        à direita: 8 29 30 31
    local-decl <no> (40)
        à esquerda: 14 15
        à direita: 13 14
    stmt-list <no> (41)
        à esquerda: 16 17
        à direita: 13 16
    stmt <no> (42)
        à esquerda: 18 19 20 21 22 23 24
        à direita: 16
    expr <no> (43)
        à esquerda: 25 26
        à direita: 18 25
    simple-expr <no> (44)
        à esquerda: 27 28
        à direita: 26 29 30 31 32 38 53 54
    conditional-stmt <no> (45)
        à esquerda: 29 30
        à direita: 19
    iteration-stmt <no> (46)
        à esquerda: 31
        à direita: 20
    return-stmt <no> (47)
        à esquerda: 32 33
        à direita: 21
    var <no> (48)
        à esquerda: 34
        à direita: 23 24 25 39
    op-expr <no> (49)
        à esquerda: 35 36 37
        à direita: 27 28 35 36
    term <no> (50)
        à esquerda: 38 39 40 41 42 43 44
        à direita: 35 36 37
    call <no> (51)
        à esquerda: 45 46 47 48 49 50
        à direita: 40
    args <no> (52)
        à esquerda: 51 52
        à direita: 45 46 47 48 49 50
    arg-list <no> (53)
        à esquerda: 53 54
        à direita: 51 53
    string <no> (54)
        à esquerda: 55 56
        à direita: 22 41 55


Estado 0

    0 $accept: • prog $end

    TYPE  deslocar, e ir ao estado 1

    prog       ir ao estado 2
    decl-list  ir ao estado 3
    var-decl   ir ao estado 4
    func       ir ao estado 5


Estado 1

    6 var-decl: TYPE • ID ';'
    8 func: TYPE • ID $@1 '(' params-list ')' comp-stmt

    ID  deslocar, e ir ao estado 6


Estado 2

    0 $accept: prog • $end

    $end  deslocar, e ir ao estado 7


Estado 3

    1 prog: decl-list •
    2 decl-list: decl-list • var-decl
    4          | decl-list • func

    TYPE  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (prog)

    var-decl  ir ao estado 8
    func      ir ao estado 9


Estado 4

    3 decl-list: var-decl •

    $padrão  reduzir usando a regra 3 (decl-list)


Estado 5

    5 decl-list: func •

    $padrão  reduzir usando a regra 5 (decl-list)


Estado 6

    6 var-decl: TYPE ID • ';'
    8 func: TYPE ID • $@1 '(' params-list ')' comp-stmt

    ';'  deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 7 ($@1)

    $@1  ir ao estado 11


Estado 7

    0 $accept: prog $end •

    $padrão  aceitar


Estado 8

    2 decl-list: decl-list var-decl •

    $padrão  reduzir usando a regra 2 (decl-list)


Estado 9

    4 decl-list: decl-list func •

    $padrão  reduzir usando a regra 4 (decl-list)


Estado 10

    6 var-decl: TYPE ID ';' •

    $padrão  reduzir usando a regra 6 (var-decl)


Estado 11

    8 func: TYPE ID $@1 • '(' params-list ')' comp-stmt

    '('  deslocar, e ir ao estado 12


Estado 12

    8 func: TYPE ID $@1 '(' • params-list ')' comp-stmt

    TYPE  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 10 (params-list)

    params-list  ir ao estado 14
    params       ir ao estado 15


Estado 13

   12 params: TYPE • ID

    ID  deslocar, e ir ao estado 16


Estado 14

    8 func: TYPE ID $@1 '(' params-list • ')' comp-stmt

    ')'  deslocar, e ir ao estado 17


Estado 15

    9 params-list: params •
   11 params: params • ',' TYPE ID

    ','  deslocar, e ir ao estado 18

    $padrão  reduzir usando a regra 9 (params-list)


Estado 16

   12 params: TYPE ID •

    $padrão  reduzir usando a regra 12 (params)


Estado 17

    8 func: TYPE ID $@1 '(' params-list ')' • comp-stmt

    '{'  deslocar, e ir ao estado 19

    comp-stmt  ir ao estado 20


Estado 18

   11 params: params ',' • TYPE ID

    TYPE  deslocar, e ir ao estado 21


Estado 19

   13 comp-stmt: '{' • local-decl stmt-list '}'

    $padrão  reduzir usando a regra 15 (local-decl)

    local-decl  ir ao estado 22


Estado 20

    8 func: TYPE ID $@1 '(' params-list ')' comp-stmt •

    $padrão  reduzir usando a regra 8 (func)


Estado 21

   11 params: params ',' TYPE • ID

    ID  deslocar, e ir ao estado 23


Estado 22

   13 comp-stmt: '{' local-decl • stmt-list '}'
   14 local-decl: local-decl • var-decl

    TYPE  deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 17 (stmt-list)

    var-decl   ir ao estado 25
    stmt-list  ir ao estado 26


Estado 23

   11 params: params ',' TYPE ID •

    $padrão  reduzir usando a regra 11 (params)


Estado 24

    6 var-decl: TYPE • ID ';'

    ID  deslocar, e ir ao estado 27


Estado 25

   14 local-decl: local-decl var-decl •

    $padrão  reduzir usando a regra 14 (local-decl)


Estado 26

   13 comp-stmt: '{' local-decl stmt-list • '}'
   16 stmt-list: stmt-list • stmt

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    IF         deslocar, e ir ao estado 32
    WHILE      deslocar, e ir ao estado 33
    RETURN     deslocar, e ir ao estado 34
    PRINT      deslocar, e ir ao estado 35
    SCAN       deslocar, e ir ao estado 36
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43
    '}'        deslocar, e ir ao estado 44

    stmt              ir ao estado 45
    expr              ir ao estado 46
    simple-expr       ir ao estado 47
    conditional-stmt  ir ao estado 48
    iteration-stmt    ir ao estado 49
    return-stmt       ir ao estado 50
    var               ir ao estado 51
    op-expr           ir ao estado 52
    term              ir ao estado 53
    call              ir ao estado 54


Estado 27

    6 var-decl: TYPE ID • ';'

    ';'  deslocar, e ir ao estado 10


Estado 28

   42 term: INT •

    $padrão  reduzir usando a regra 42 (term)


Estado 29

   43 term: FLOAT •

    $padrão  reduzir usando a regra 43 (term)


Estado 30

   44 term: BOOL •

    $padrão  reduzir usando a regra 44 (term)


Estado 31

   34 var: ID •
   45 call: ID • '(' args ')'

    '('  deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 34 (var)


Estado 32

   29 conditional-stmt: IF • '(' simple-expr ')' comp-stmt
   30                 | IF • '(' simple-expr ')' comp-stmt ELSE comp-stmt

    '('  deslocar, e ir ao estado 56


Estado 33

   31 iteration-stmt: WHILE • '(' simple-expr ')' comp-stmt

    '('  deslocar, e ir ao estado 57


Estado 34

   32 return-stmt: RETURN • simple-expr ';'
   33            | RETURN • ';'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    ';'        deslocar, e ir ao estado 58
    '('        deslocar, e ir ao estado 43

    simple-expr  ir ao estado 59
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 35

   22 stmt: PRINT • '(' QUOTES string QUOTES ')' ';'
   23     | PRINT • '(' var ')' ';'

    '('  deslocar, e ir ao estado 61


Estado 36

   24 stmt: SCAN • '(' var ')' ';'

    '('  deslocar, e ir ao estado 62


Estado 37

   49 call: STRUPPER • '(' args ')'

    '('  deslocar, e ir ao estado 63


Estado 38

   50 call: STRLOWER • '(' args ')'

    '('  deslocar, e ir ao estado 64


Estado 39

   46 call: STRCONCAT • '(' args ')'

    '('  deslocar, e ir ao estado 65


Estado 40

   47 call: STRCOPY • '(' args ')'

    '('  deslocar, e ir ao estado 66


Estado 41

   48 call: STRINSERT • '(' args ')'

    '('  deslocar, e ir ao estado 67


Estado 42

   41 term: QUOTES • string QUOTES

    $padrão  reduzir usando a regra 56 (string)

    string  ir ao estado 68


Estado 43

   38 term: '(' • simple-expr ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    simple-expr  ir ao estado 69
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 44

   13 comp-stmt: '{' local-decl stmt-list '}' •

    $padrão  reduzir usando a regra 13 (comp-stmt)


Estado 45

   16 stmt-list: stmt-list stmt •

    $padrão  reduzir usando a regra 16 (stmt-list)


Estado 46

   18 stmt: expr •

    $padrão  reduzir usando a regra 18 (stmt)


Estado 47

   26 expr: simple-expr • ';'

    ';'  deslocar, e ir ao estado 70


Estado 48

   19 stmt: conditional-stmt •

    $padrão  reduzir usando a regra 19 (stmt)


Estado 49

   20 stmt: iteration-stmt •

    $padrão  reduzir usando a regra 20 (stmt)


Estado 50

   21 stmt: return-stmt •

    $padrão  reduzir usando a regra 21 (stmt)


Estado 51

   25 expr: var • ASSIGN expr
   39 term: var •

    ASSIGN  deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 39 (term)


Estado 52

   27 simple-expr: op-expr • RELOP op-expr
   28            | op-expr •
   35 op-expr: op-expr • OP term
   36        | op-expr • LOG term

    OP     deslocar, e ir ao estado 72
    RELOP  deslocar, e ir ao estado 73
    LOG    deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 28 (simple-expr)


Estado 53

   37 op-expr: term •

    $padrão  reduzir usando a regra 37 (op-expr)


Estado 54

   40 term: call •

    $padrão  reduzir usando a regra 40 (term)


Estado 55

   45 call: ID '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 76
    arg-list     ir ao estado 77


Estado 56

   29 conditional-stmt: IF '(' • simple-expr ')' comp-stmt
   30                 | IF '(' • simple-expr ')' comp-stmt ELSE comp-stmt

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    simple-expr  ir ao estado 78
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 57

   31 iteration-stmt: WHILE '(' • simple-expr ')' comp-stmt

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    simple-expr  ir ao estado 79
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 58

   33 return-stmt: RETURN ';' •

    $padrão  reduzir usando a regra 33 (return-stmt)


Estado 59

   32 return-stmt: RETURN simple-expr • ';'

    ';'  deslocar, e ir ao estado 80


Estado 60

   39 term: var •

    $padrão  reduzir usando a regra 39 (term)


Estado 61

   22 stmt: PRINT '(' • QUOTES string QUOTES ')' ';'
   23     | PRINT '(' • var ')' ';'

    ID      deslocar, e ir ao estado 81
    QUOTES  deslocar, e ir ao estado 82

    var  ir ao estado 83


Estado 62

   24 stmt: SCAN '(' • var ')' ';'

    ID  deslocar, e ir ao estado 81

    var  ir ao estado 84


Estado 63

   49 call: STRUPPER '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 85
    arg-list     ir ao estado 77


Estado 64

   50 call: STRLOWER '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 86
    arg-list     ir ao estado 77


Estado 65

   46 call: STRCONCAT '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 87
    arg-list     ir ao estado 77


Estado 66

   47 call: STRCOPY '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 88
    arg-list     ir ao estado 77


Estado 67

   48 call: STRINSERT '(' • args ')'

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 89
    arg-list     ir ao estado 77


Estado 68

   41 term: QUOTES string • QUOTES
   55 string: string • STR

    STR     deslocar, e ir ao estado 90
    QUOTES  deslocar, e ir ao estado 91


Estado 69

   38 term: '(' simple-expr • ')'

    ')'  deslocar, e ir ao estado 92


Estado 70

   26 expr: simple-expr ';' •

    $padrão  reduzir usando a regra 26 (expr)


Estado 71

   25 expr: var ASSIGN • expr

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    expr         ir ao estado 93
    simple-expr  ir ao estado 47
    var          ir ao estado 51
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 72

   35 op-expr: op-expr OP • term

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    var   ir ao estado 60
    term  ir ao estado 94
    call  ir ao estado 54


Estado 73

   27 simple-expr: op-expr RELOP • op-expr

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    var      ir ao estado 60
    op-expr  ir ao estado 95
    term     ir ao estado 53
    call     ir ao estado 54


Estado 74

   36 op-expr: op-expr LOG • term

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    var   ir ao estado 60
    term  ir ao estado 96
    call  ir ao estado 54


Estado 75

   53 arg-list: simple-expr • ',' arg-list
   54         | simple-expr •

    ','  deslocar, e ir ao estado 97

    $padrão  reduzir usando a regra 54 (arg-list)


Estado 76

   45 call: ID '(' args • ')'

    ')'  deslocar, e ir ao estado 98


Estado 77

   51 args: arg-list •

    $padrão  reduzir usando a regra 51 (args)


Estado 78

   29 conditional-stmt: IF '(' simple-expr • ')' comp-stmt
   30                 | IF '(' simple-expr • ')' comp-stmt ELSE comp-stmt

    ')'  deslocar, e ir ao estado 99


Estado 79

   31 iteration-stmt: WHILE '(' simple-expr • ')' comp-stmt

    ')'  deslocar, e ir ao estado 100


Estado 80

   32 return-stmt: RETURN simple-expr ';' •

    $padrão  reduzir usando a regra 32 (return-stmt)


Estado 81

   34 var: ID •

    $padrão  reduzir usando a regra 34 (var)


Estado 82

   22 stmt: PRINT '(' QUOTES • string QUOTES ')' ';'

    $padrão  reduzir usando a regra 56 (string)

    string  ir ao estado 101


Estado 83

   23 stmt: PRINT '(' var • ')' ';'

    ')'  deslocar, e ir ao estado 102


Estado 84

   24 stmt: SCAN '(' var • ')' ';'

    ')'  deslocar, e ir ao estado 103


Estado 85

   49 call: STRUPPER '(' args • ')'

    ')'  deslocar, e ir ao estado 104


Estado 86

   50 call: STRLOWER '(' args • ')'

    ')'  deslocar, e ir ao estado 105


Estado 87

   46 call: STRCONCAT '(' args • ')'

    ')'  deslocar, e ir ao estado 106


Estado 88

   47 call: STRCOPY '(' args • ')'

    ')'  deslocar, e ir ao estado 107


Estado 89

   48 call: STRINSERT '(' args • ')'

    ')'  deslocar, e ir ao estado 108


Estado 90

   55 string: string STR •

    $padrão  reduzir usando a regra 55 (string)


Estado 91

   41 term: QUOTES string QUOTES •

    $padrão  reduzir usando a regra 41 (term)


Estado 92

   38 term: '(' simple-expr ')' •

    $padrão  reduzir usando a regra 38 (term)


Estado 93

   25 expr: var ASSIGN expr •

    $padrão  reduzir usando a regra 25 (expr)


Estado 94

   35 op-expr: op-expr OP term •

    $padrão  reduzir usando a regra 35 (op-expr)


Estado 95

   27 simple-expr: op-expr RELOP op-expr •
   35 op-expr: op-expr • OP term
   36        | op-expr • LOG term

    OP   deslocar, e ir ao estado 72
    LOG  deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 27 (simple-expr)


Estado 96

   36 op-expr: op-expr LOG term •

    $padrão  reduzir usando a regra 36 (op-expr)


Estado 97

   53 arg-list: simple-expr ',' • arg-list

    INT        deslocar, e ir ao estado 28
    FLOAT      deslocar, e ir ao estado 29
    BOOL       deslocar, e ir ao estado 30
    ID         deslocar, e ir ao estado 31
    STRUPPER   deslocar, e ir ao estado 37
    STRLOWER   deslocar, e ir ao estado 38
    STRCONCAT  deslocar, e ir ao estado 39
    STRCOPY    deslocar, e ir ao estado 40
    STRINSERT  deslocar, e ir ao estado 41
    QUOTES     deslocar, e ir ao estado 42
    '('        deslocar, e ir ao estado 43

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    arg-list     ir ao estado 109


Estado 98

   45 call: ID '(' args ')' •

    $padrão  reduzir usando a regra 45 (call)


Estado 99

   29 conditional-stmt: IF '(' simple-expr ')' • comp-stmt
   30                 | IF '(' simple-expr ')' • comp-stmt ELSE comp-stmt

    '{'  deslocar, e ir ao estado 19

    comp-stmt  ir ao estado 110


Estado 100

   31 iteration-stmt: WHILE '(' simple-expr ')' • comp-stmt

    '{'  deslocar, e ir ao estado 19

    comp-stmt  ir ao estado 111


Estado 101

   22 stmt: PRINT '(' QUOTES string • QUOTES ')' ';'
   55 string: string • STR

    STR     deslocar, e ir ao estado 90
    QUOTES  deslocar, e ir ao estado 112


Estado 102

   23 stmt: PRINT '(' var ')' • ';'

    ';'  deslocar, e ir ao estado 113


Estado 103

   24 stmt: SCAN '(' var ')' • ';'

    ';'  deslocar, e ir ao estado 114


Estado 104

   49 call: STRUPPER '(' args ')' •

    $padrão  reduzir usando a regra 49 (call)


Estado 105

   50 call: STRLOWER '(' args ')' •

    $padrão  reduzir usando a regra 50 (call)


Estado 106

   46 call: STRCONCAT '(' args ')' •

    $padrão  reduzir usando a regra 46 (call)


Estado 107

   47 call: STRCOPY '(' args ')' •

    $padrão  reduzir usando a regra 47 (call)


Estado 108

   48 call: STRINSERT '(' args ')' •

    $padrão  reduzir usando a regra 48 (call)


Estado 109

   53 arg-list: simple-expr ',' arg-list •

    $padrão  reduzir usando a regra 53 (arg-list)


Estado 110

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt •
   30                 | IF '(' simple-expr ')' comp-stmt • ELSE comp-stmt

    ELSE  deslocar, e ir ao estado 115

    $padrão  reduzir usando a regra 29 (conditional-stmt)


Estado 111

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt •

    $padrão  reduzir usando a regra 31 (iteration-stmt)


Estado 112

   22 stmt: PRINT '(' QUOTES string QUOTES • ')' ';'

    ')'  deslocar, e ir ao estado 116


Estado 113

   23 stmt: PRINT '(' var ')' ';' •

    $padrão  reduzir usando a regra 23 (stmt)


Estado 114

   24 stmt: SCAN '(' var ')' ';' •

    $padrão  reduzir usando a regra 24 (stmt)


Estado 115

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE • comp-stmt

    '{'  deslocar, e ir ao estado 19

    comp-stmt  ir ao estado 117


Estado 116

   22 stmt: PRINT '(' QUOTES string QUOTES ')' • ';'

    ';'  deslocar, e ir ao estado 118


Estado 117

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt •

    $padrão  reduzir usando a regra 30 (conditional-stmt)


Estado 118

   22 stmt: PRINT '(' QUOTES string QUOTES ')' ';' •

    $padrão  reduzir usando a regra 22 (stmt)
