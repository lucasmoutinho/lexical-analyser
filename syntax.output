Gramática

    0 $accept: prog $end

    1 prog: decl-list

    2 decl-list: decl-list var-decl
    3          | var-decl
    4          | decl-list func
    5          | func

    6 var-decl: TYPE ID ';'

    7 $@1: %empty

    8 func: TYPE ID $@1 '(' params ')' comp-stmt

    9 params: params ',' TYPE ID
   10       | TYPE ID
   11       | %empty

   12 comp-stmt: '{' local-decl stmt-list '}'

   13 local-decl: local-decl TYPE ID ';'
   14           | %empty

   15 stmt-list: stmt-list stmt
   16          | %empty

   17 stmt: expr
   18     | conditional-stmt
   19     | iteration-stmt
   20     | return-stmt
   21     | PRINT '(' QUOTES string QUOTES ')' ';'
   22     | PRINT '(' var ')' ';'
   23     | SCAN '(' var ')' ';'

   24 expr: var ASSIGN expr
   25     | simple-expr ';'

   26 simple-expr: op-expr RELOP op-expr
   27            | op-expr

   28 conditional-stmt: IF '(' simple-expr ')' comp-stmt
   29                 | IF '(' simple-expr ')' comp-stmt ELSE comp-stmt

   30 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt

   31 return-stmt: RETURN simple-expr ';'
   32            | RETURN ';'

   33 var: ID

   34 op-expr: op-expr OP term
   35        | op-expr LOG term
   36        | term

   37 term: '(' op-expr ')'
   38     | var
   39     | call
   40     | QUOTES string QUOTES
   41     | INT
   42     | FLOAT
   43     | BOOL

   44 call: ID '(' args ')'
   45     | STRCONCAT '(' args ')'
   46     | STRCOPY '(' args ')'
   47     | STRINSERT '(' args ')'
   48     | STRUPPER '(' args ')'
   49     | STRLOWER '(' args ')'

   50 args: arg-list
   51     | %empty

   52 arg-list: arg-list ',' simple-expr
   53         | simple-expr

   54 string: string STR
   55       | %empty


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 8 21 22 23 28 29 30 37 44 45 46 47 48 49
')' (41) 8 21 22 23 28 29 30 37 44 45 46 47 48 49
',' (44) 9 52
';' (59) 6 13 21 22 23 25 31 32
'{' (123) 12
'}' (125) 12
error (256)
INT (258) 41
FLOAT (259) 42
BOOL (260) 43
STR (261) 54
TYPE (262) 6 8 9 10 13
ID (263) 6 8 9 10 13 33 44
IF (264) 28 29
ELSE (265) 29
WHILE (266) 30
RETURN (267) 31 32
PRINT (268) 21 22
SCAN (269) 23
STRUPPER (270) 48
STRLOWER (271) 49
STRCONCAT (272) 45
STRCOPY (273) 46
STRINSERT (274) 47
QUOTES (275) 21 40
ASSIGN (276) 24
OP (277) 34
RELOP (278) 26
LOG (279) 35


Não terminais com as regras onde eles aparecem

$accept (31)
    à esquerda: 0
prog (32)
    à esquerda: 1, à direita: 0
decl-list (33)
    à esquerda: 2 3 4 5, à direita: 1 2 4
var-decl (34)
    à esquerda: 6, à direita: 2 3
func (35)
    à esquerda: 8, à direita: 4 5
$@1 (36)
    à esquerda: 7, à direita: 8
params (37)
    à esquerda: 9 10 11, à direita: 8 9
comp-stmt (38)
    à esquerda: 12, à direita: 8 28 29 30
local-decl (39)
    à esquerda: 13 14, à direita: 12 13
stmt-list (40)
    à esquerda: 15 16, à direita: 12 15
stmt (41)
    à esquerda: 17 18 19 20 21 22 23, à direita: 15
expr (42)
    à esquerda: 24 25, à direita: 17 24
simple-expr (43)
    à esquerda: 26 27, à direita: 25 28 29 30 31 52 53
conditional-stmt (44)
    à esquerda: 28 29, à direita: 18
iteration-stmt (45)
    à esquerda: 30, à direita: 19
return-stmt (46)
    à esquerda: 31 32, à direita: 20
var (47)
    à esquerda: 33, à direita: 22 23 24 38
op-expr (48)
    à esquerda: 34 35 36, à direita: 26 27 34 35 37
term (49)
    à esquerda: 37 38 39 40 41 42 43, à direita: 34 35 36
call (50)
    à esquerda: 44 45 46 47 48 49, à direita: 39
args (51)
    à esquerda: 50 51, à direita: 44 45 46 47 48 49
arg-list (52)
    à esquerda: 52 53, à direita: 50 52
string (53)
    à esquerda: 54 55, à direita: 21 40 54


Estado 0

    0 $accept: . prog $end

    TYPE  deslocar, e ir ao estado 1

    prog       ir ao estado 2
    decl-list  ir ao estado 3
    var-decl   ir ao estado 4
    func       ir ao estado 5


Estado 1

    6 var-decl: TYPE . ID ';'
    8 func: TYPE . ID $@1 '(' params ')' comp-stmt

    ID  deslocar, e ir ao estado 6


Estado 2

    0 $accept: prog . $end

    $end  deslocar, e ir ao estado 7


Estado 3

    1 prog: decl-list .
    2 decl-list: decl-list . var-decl
    4          | decl-list . func

    TYPE  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (prog)

    var-decl  ir ao estado 8
    func      ir ao estado 9


Estado 4

    3 decl-list: var-decl .

    $padrão  reduzir usando a regra 3 (decl-list)


Estado 5

    5 decl-list: func .

    $padrão  reduzir usando a regra 5 (decl-list)


Estado 6

    6 var-decl: TYPE ID . ';'
    8 func: TYPE ID . $@1 '(' params ')' comp-stmt

    ';'  deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 7 ($@1)

    $@1  ir ao estado 11


Estado 7

    0 $accept: prog $end .

    $padrão  aceitar


Estado 8

    2 decl-list: decl-list var-decl .

    $padrão  reduzir usando a regra 2 (decl-list)


Estado 9

    4 decl-list: decl-list func .

    $padrão  reduzir usando a regra 4 (decl-list)


Estado 10

    6 var-decl: TYPE ID ';' .

    $padrão  reduzir usando a regra 6 (var-decl)


Estado 11

    8 func: TYPE ID $@1 . '(' params ')' comp-stmt

    '('  deslocar, e ir ao estado 12


Estado 12

    8 func: TYPE ID $@1 '(' . params ')' comp-stmt

    TYPE  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 11 (params)

    params  ir ao estado 14


Estado 13

   10 params: TYPE . ID

    ID  deslocar, e ir ao estado 15


Estado 14

    8 func: TYPE ID $@1 '(' params . ')' comp-stmt
    9 params: params . ',' TYPE ID

    ')'  deslocar, e ir ao estado 16
    ','  deslocar, e ir ao estado 17


Estado 15

   10 params: TYPE ID .

    $padrão  reduzir usando a regra 10 (params)


Estado 16

    8 func: TYPE ID $@1 '(' params ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 19


Estado 17

    9 params: params ',' . TYPE ID

    TYPE  deslocar, e ir ao estado 20


Estado 18

   12 comp-stmt: '{' . local-decl stmt-list '}'

    $padrão  reduzir usando a regra 14 (local-decl)

    local-decl  ir ao estado 21


Estado 19

    8 func: TYPE ID $@1 '(' params ')' comp-stmt .

    $padrão  reduzir usando a regra 8 (func)


Estado 20

    9 params: params ',' TYPE . ID

    ID  deslocar, e ir ao estado 22


Estado 21

   12 comp-stmt: '{' local-decl . stmt-list '}'
   13 local-decl: local-decl . TYPE ID ';'

    TYPE  deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 16 (stmt-list)

    stmt-list  ir ao estado 24


Estado 22

    9 params: params ',' TYPE ID .

    $padrão  reduzir usando a regra 9 (params)


Estado 23

   13 local-decl: local-decl TYPE . ID ';'

    ID  deslocar, e ir ao estado 25


Estado 24

   12 comp-stmt: '{' local-decl stmt-list . '}'
   15 stmt-list: stmt-list . stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    IF         deslocar, e ir ao estado 30
    WHILE      deslocar, e ir ao estado 31
    RETURN     deslocar, e ir ao estado 32
    PRINT      deslocar, e ir ao estado 33
    SCAN       deslocar, e ir ao estado 34
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41
    '}'        deslocar, e ir ao estado 42

    stmt              ir ao estado 43
    expr              ir ao estado 44
    simple-expr       ir ao estado 45
    conditional-stmt  ir ao estado 46
    iteration-stmt    ir ao estado 47
    return-stmt       ir ao estado 48
    var               ir ao estado 49
    op-expr           ir ao estado 50
    term              ir ao estado 51
    call              ir ao estado 52


Estado 25

   13 local-decl: local-decl TYPE ID . ';'

    ';'  deslocar, e ir ao estado 53


Estado 26

   41 term: INT .

    $padrão  reduzir usando a regra 41 (term)


Estado 27

   42 term: FLOAT .

    $padrão  reduzir usando a regra 42 (term)


Estado 28

   43 term: BOOL .

    $padrão  reduzir usando a regra 43 (term)


Estado 29

   33 var: ID .
   44 call: ID . '(' args ')'

    '('  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 33 (var)


Estado 30

   28 conditional-stmt: IF . '(' simple-expr ')' comp-stmt
   29                 | IF . '(' simple-expr ')' comp-stmt ELSE comp-stmt

    '('  deslocar, e ir ao estado 55


Estado 31

   30 iteration-stmt: WHILE . '(' simple-expr ')' comp-stmt

    '('  deslocar, e ir ao estado 56


Estado 32

   31 return-stmt: RETURN . simple-expr ';'
   32            | RETURN . ';'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    ';'        deslocar, e ir ao estado 57
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 58
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52


Estado 33

   21 stmt: PRINT . '(' QUOTES string QUOTES ')' ';'
   22     | PRINT . '(' var ')' ';'

    '('  deslocar, e ir ao estado 60


Estado 34

   23 stmt: SCAN . '(' var ')' ';'

    '('  deslocar, e ir ao estado 61


Estado 35

   48 call: STRUPPER . '(' args ')'

    '('  deslocar, e ir ao estado 62


Estado 36

   49 call: STRLOWER . '(' args ')'

    '('  deslocar, e ir ao estado 63


Estado 37

   45 call: STRCONCAT . '(' args ')'

    '('  deslocar, e ir ao estado 64


Estado 38

   46 call: STRCOPY . '(' args ')'

    '('  deslocar, e ir ao estado 65


Estado 39

   47 call: STRINSERT . '(' args ')'

    '('  deslocar, e ir ao estado 66


Estado 40

   40 term: QUOTES . string QUOTES

    $padrão  reduzir usando a regra 55 (string)

    string  ir ao estado 67


Estado 41

   37 term: '(' . op-expr ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var      ir ao estado 59
    op-expr  ir ao estado 68
    term     ir ao estado 51
    call     ir ao estado 52


Estado 42

   12 comp-stmt: '{' local-decl stmt-list '}' .

    $padrão  reduzir usando a regra 12 (comp-stmt)


Estado 43

   15 stmt-list: stmt-list stmt .

    $padrão  reduzir usando a regra 15 (stmt-list)


Estado 44

   17 stmt: expr .

    $padrão  reduzir usando a regra 17 (stmt)


Estado 45

   25 expr: simple-expr . ';'

    ';'  deslocar, e ir ao estado 69


Estado 46

   18 stmt: conditional-stmt .

    $padrão  reduzir usando a regra 18 (stmt)


Estado 47

   19 stmt: iteration-stmt .

    $padrão  reduzir usando a regra 19 (stmt)


Estado 48

   20 stmt: return-stmt .

    $padrão  reduzir usando a regra 20 (stmt)


Estado 49

   24 expr: var . ASSIGN expr
   38 term: var .

    ASSIGN  deslocar, e ir ao estado 70

    $padrão  reduzir usando a regra 38 (term)


Estado 50

   26 simple-expr: op-expr . RELOP op-expr
   27            | op-expr .
   34 op-expr: op-expr . OP term
   35        | op-expr . LOG term

    OP     deslocar, e ir ao estado 71
    RELOP  deslocar, e ir ao estado 72
    LOG    deslocar, e ir ao estado 73

    $padrão  reduzir usando a regra 27 (simple-expr)


Estado 51

   36 op-expr: term .

    $padrão  reduzir usando a regra 36 (op-expr)


Estado 52

   39 term: call .

    $padrão  reduzir usando a regra 39 (term)


Estado 53

   13 local-decl: local-decl TYPE ID ';' .

    $padrão  reduzir usando a regra 13 (local-decl)


Estado 54

   44 call: ID '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 75
    arg-list     ir ao estado 76


Estado 55

   28 conditional-stmt: IF '(' . simple-expr ')' comp-stmt
   29                 | IF '(' . simple-expr ')' comp-stmt ELSE comp-stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 77
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52


Estado 56

   30 iteration-stmt: WHILE '(' . simple-expr ')' comp-stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 78
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52


Estado 57

   32 return-stmt: RETURN ';' .

    $padrão  reduzir usando a regra 32 (return-stmt)


Estado 58

   31 return-stmt: RETURN simple-expr . ';'

    ';'  deslocar, e ir ao estado 79


Estado 59

   38 term: var .

    $padrão  reduzir usando a regra 38 (term)


Estado 60

   21 stmt: PRINT '(' . QUOTES string QUOTES ')' ';'
   22     | PRINT '(' . var ')' ';'

    ID      deslocar, e ir ao estado 80
    QUOTES  deslocar, e ir ao estado 81

    var  ir ao estado 82


Estado 61

   23 stmt: SCAN '(' . var ')' ';'

    ID  deslocar, e ir ao estado 80

    var  ir ao estado 83


Estado 62

   48 call: STRUPPER '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 84
    arg-list     ir ao estado 76


Estado 63

   49 call: STRLOWER '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 85
    arg-list     ir ao estado 76


Estado 64

   45 call: STRCONCAT '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 86
    arg-list     ir ao estado 76


Estado 65

   46 call: STRCOPY '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 87
    arg-list     ir ao estado 76


Estado 66

   47 call: STRINSERT '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 51 (args)

    simple-expr  ir ao estado 74
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52
    args         ir ao estado 88
    arg-list     ir ao estado 76


Estado 67

   40 term: QUOTES string . QUOTES
   54 string: string . STR

    STR     deslocar, e ir ao estado 89
    QUOTES  deslocar, e ir ao estado 90


Estado 68

   34 op-expr: op-expr . OP term
   35        | op-expr . LOG term
   37 term: '(' op-expr . ')'

    OP   deslocar, e ir ao estado 71
    LOG  deslocar, e ir ao estado 73
    ')'  deslocar, e ir ao estado 91


Estado 69

   25 expr: simple-expr ';' .

    $padrão  reduzir usando a regra 25 (expr)


Estado 70

   24 expr: var ASSIGN . expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    expr         ir ao estado 92
    simple-expr  ir ao estado 45
    var          ir ao estado 49
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52


Estado 71

   34 op-expr: op-expr OP . term

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var   ir ao estado 59
    term  ir ao estado 93
    call  ir ao estado 52


Estado 72

   26 simple-expr: op-expr RELOP . op-expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var      ir ao estado 59
    op-expr  ir ao estado 94
    term     ir ao estado 51
    call     ir ao estado 52


Estado 73

   35 op-expr: op-expr LOG . term

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var   ir ao estado 59
    term  ir ao estado 95
    call  ir ao estado 52


Estado 74

   53 arg-list: simple-expr .

    $padrão  reduzir usando a regra 53 (arg-list)


Estado 75

   44 call: ID '(' args . ')'

    ')'  deslocar, e ir ao estado 96


Estado 76

   50 args: arg-list .
   52 arg-list: arg-list . ',' simple-expr

    ','  deslocar, e ir ao estado 97

    $padrão  reduzir usando a regra 50 (args)


Estado 77

   28 conditional-stmt: IF '(' simple-expr . ')' comp-stmt
   29                 | IF '(' simple-expr . ')' comp-stmt ELSE comp-stmt

    ')'  deslocar, e ir ao estado 98


Estado 78

   30 iteration-stmt: WHILE '(' simple-expr . ')' comp-stmt

    ')'  deslocar, e ir ao estado 99


Estado 79

   31 return-stmt: RETURN simple-expr ';' .

    $padrão  reduzir usando a regra 31 (return-stmt)


Estado 80

   33 var: ID .

    $padrão  reduzir usando a regra 33 (var)


Estado 81

   21 stmt: PRINT '(' QUOTES . string QUOTES ')' ';'

    $padrão  reduzir usando a regra 55 (string)

    string  ir ao estado 100


Estado 82

   22 stmt: PRINT '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 101


Estado 83

   23 stmt: SCAN '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 102


Estado 84

   48 call: STRUPPER '(' args . ')'

    ')'  deslocar, e ir ao estado 103


Estado 85

   49 call: STRLOWER '(' args . ')'

    ')'  deslocar, e ir ao estado 104


Estado 86

   45 call: STRCONCAT '(' args . ')'

    ')'  deslocar, e ir ao estado 105


Estado 87

   46 call: STRCOPY '(' args . ')'

    ')'  deslocar, e ir ao estado 106


Estado 88

   47 call: STRINSERT '(' args . ')'

    ')'  deslocar, e ir ao estado 107


Estado 89

   54 string: string STR .

    $padrão  reduzir usando a regra 54 (string)


Estado 90

   40 term: QUOTES string QUOTES .

    $padrão  reduzir usando a regra 40 (term)


Estado 91

   37 term: '(' op-expr ')' .

    $padrão  reduzir usando a regra 37 (term)


Estado 92

   24 expr: var ASSIGN expr .

    $padrão  reduzir usando a regra 24 (expr)


Estado 93

   34 op-expr: op-expr OP term .

    $padrão  reduzir usando a regra 34 (op-expr)


Estado 94

   26 simple-expr: op-expr RELOP op-expr .
   34 op-expr: op-expr . OP term
   35        | op-expr . LOG term

    OP   deslocar, e ir ao estado 71
    LOG  deslocar, e ir ao estado 73

    $padrão  reduzir usando a regra 26 (simple-expr)


Estado 95

   35 op-expr: op-expr LOG term .

    $padrão  reduzir usando a regra 35 (op-expr)


Estado 96

   44 call: ID '(' args ')' .

    $padrão  reduzir usando a regra 44 (call)


Estado 97

   52 arg-list: arg-list ',' . simple-expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 108
    var          ir ao estado 59
    op-expr      ir ao estado 50
    term         ir ao estado 51
    call         ir ao estado 52


Estado 98

   28 conditional-stmt: IF '(' simple-expr ')' . comp-stmt
   29                 | IF '(' simple-expr ')' . comp-stmt ELSE comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 109


Estado 99

   30 iteration-stmt: WHILE '(' simple-expr ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 110


Estado 100

   21 stmt: PRINT '(' QUOTES string . QUOTES ')' ';'
   54 string: string . STR

    STR     deslocar, e ir ao estado 89
    QUOTES  deslocar, e ir ao estado 111


Estado 101

   22 stmt: PRINT '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 112


Estado 102

   23 stmt: SCAN '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 113


Estado 103

   48 call: STRUPPER '(' args ')' .

    $padrão  reduzir usando a regra 48 (call)


Estado 104

   49 call: STRLOWER '(' args ')' .

    $padrão  reduzir usando a regra 49 (call)


Estado 105

   45 call: STRCONCAT '(' args ')' .

    $padrão  reduzir usando a regra 45 (call)


Estado 106

   46 call: STRCOPY '(' args ')' .

    $padrão  reduzir usando a regra 46 (call)


Estado 107

   47 call: STRINSERT '(' args ')' .

    $padrão  reduzir usando a regra 47 (call)


Estado 108

   52 arg-list: arg-list ',' simple-expr .

    $padrão  reduzir usando a regra 52 (arg-list)


Estado 109

   28 conditional-stmt: IF '(' simple-expr ')' comp-stmt .
   29                 | IF '(' simple-expr ')' comp-stmt . ELSE comp-stmt

    ELSE  deslocar, e ir ao estado 114

    $padrão  reduzir usando a regra 28 (conditional-stmt)


Estado 110

   30 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt .

    $padrão  reduzir usando a regra 30 (iteration-stmt)


Estado 111

   21 stmt: PRINT '(' QUOTES string QUOTES . ')' ';'

    ')'  deslocar, e ir ao estado 115


Estado 112

   22 stmt: PRINT '(' var ')' ';' .

    $padrão  reduzir usando a regra 22 (stmt)


Estado 113

   23 stmt: SCAN '(' var ')' ';' .

    $padrão  reduzir usando a regra 23 (stmt)


Estado 114

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 116


Estado 115

   21 stmt: PRINT '(' QUOTES string QUOTES ')' . ';'

    ';'  deslocar, e ir ao estado 117


Estado 116

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt .

    $padrão  reduzir usando a regra 29 (conditional-stmt)


Estado 117

   21 stmt: PRINT '(' QUOTES string QUOTES ')' ';' .

    $padrão  reduzir usando a regra 21 (stmt)
