Gramática

    0 $accept: prog $end

    1 prog: decl-list

    2 decl-list: decl-list var-decl
    3          | var-decl
    4          | decl-list func
    5          | func

    6 var-decl: TYPE ID ';'

    7 $@1: %empty

    8 func: TYPE ID $@1 '(' params ')' comp-stmt

    9 params: params ',' TYPE ID
   10       | TYPE ID
   11       | %empty

   12 comp-stmt: '{' local-decl stmt-list '}'

   13 local-decl: local-decl TYPE ID ';'
   14           | %empty

   15 stmt-list: stmt-list stmt
   16          | %empty

   17 stmt: expr
   18     | conditional-stmt
   19     | iteration-stmt
   20     | return-stmt
   21     | PRINT '(' QUOTES string QUOTES ')' ';'
   22     | PRINT '(' var ')' ';'
   23     | SCAN '(' var ')' ';'

   24 expr: var ASSIGN expr
   25     | simple-expr ';'

   26 simple-expr: op-expr RELOP op-expr
   27            | op-expr
   28            | op-log

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt
   30                 | IF '(' simple-expr ')' comp-stmt ELSE comp-stmt

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt

   32 return-stmt: RETURN simple-expr ';'
   33            | RETURN ';'

   34 var: ID

   35 op-expr: op-expr OP term
   36        | term

   37 op-log: op-log LOG term
   38       | BOOL

   39 term: '(' simple-expr ')'
   40     | var
   41     | call
   42     | QUOTES string QUOTES
   43     | INT
   44     | FLOAT

   45 call: ID '(' args ')'
   46     | STRCONCAT '(' args ')'
   47     | STRCOPY '(' args ')'
   48     | STRINSERT '(' args ')'
   49     | STRUPPER '(' args ')'
   50     | STRLOWER '(' args ')'

   51 args: arg-list
   52     | %empty

   53 arg-list: arg-list ',' simple-expr
   54         | simple-expr

   55 string: string STR
   56       | %empty


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 8 21 22 23 29 30 31 39 45 46 47 48 49 50
')' (41) 8 21 22 23 29 30 31 39 45 46 47 48 49 50
',' (44) 9 53
';' (59) 6 13 21 22 23 25 32 33
'{' (123) 12
'}' (125) 12
error (256)
INT (258) 43
FLOAT (259) 44
BOOL (260) 38
STR (261) 55
TYPE (262) 6 8 9 10 13
ID (263) 6 8 9 10 13 34 45
IF (264) 29 30
ELSE (265) 30
WHILE (266) 31
RETURN (267) 32 33
PRINT (268) 21 22
SCAN (269) 23
STRUPPER (270) 49
STRLOWER (271) 50
STRCONCAT (272) 46
STRCOPY (273) 47
STRINSERT (274) 48
QUOTES (275) 21 42
ASSIGN (276) 24
OP (277) 35
RELOP (278) 26
LOG (279) 37


Não terminais com as regras onde eles aparecem

$accept (31)
    à esquerda: 0
prog (32)
    à esquerda: 1, à direita: 0
decl-list (33)
    à esquerda: 2 3 4 5, à direita: 1 2 4
var-decl (34)
    à esquerda: 6, à direita: 2 3
func (35)
    à esquerda: 8, à direita: 4 5
$@1 (36)
    à esquerda: 7, à direita: 8
params (37)
    à esquerda: 9 10 11, à direita: 8 9
comp-stmt (38)
    à esquerda: 12, à direita: 8 29 30 31
local-decl (39)
    à esquerda: 13 14, à direita: 12 13
stmt-list (40)
    à esquerda: 15 16, à direita: 12 15
stmt (41)
    à esquerda: 17 18 19 20 21 22 23, à direita: 15
expr (42)
    à esquerda: 24 25, à direita: 17 24
simple-expr (43)
    à esquerda: 26 27 28, à direita: 25 29 30 31 32 39 53 54
conditional-stmt (44)
    à esquerda: 29 30, à direita: 18
iteration-stmt (45)
    à esquerda: 31, à direita: 19
return-stmt (46)
    à esquerda: 32 33, à direita: 20
var (47)
    à esquerda: 34, à direita: 22 23 24 40
op-expr (48)
    à esquerda: 35 36, à direita: 26 27 35
op-log (49)
    à esquerda: 37 38, à direita: 28 37
term (50)
    à esquerda: 39 40 41 42 43 44, à direita: 35 36 37
call (51)
    à esquerda: 45 46 47 48 49 50, à direita: 41
args (52)
    à esquerda: 51 52, à direita: 45 46 47 48 49 50
arg-list (53)
    à esquerda: 53 54, à direita: 51 53
string (54)
    à esquerda: 55 56, à direita: 21 42 55


Estado 0

    0 $accept: . prog $end

    TYPE  deslocar, e ir ao estado 1

    prog       ir ao estado 2
    decl-list  ir ao estado 3
    var-decl   ir ao estado 4
    func       ir ao estado 5


Estado 1

    6 var-decl: TYPE . ID ';'
    8 func: TYPE . ID $@1 '(' params ')' comp-stmt

    ID  deslocar, e ir ao estado 6


Estado 2

    0 $accept: prog . $end

    $end  deslocar, e ir ao estado 7


Estado 3

    1 prog: decl-list .
    2 decl-list: decl-list . var-decl
    4          | decl-list . func

    TYPE  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (prog)

    var-decl  ir ao estado 8
    func      ir ao estado 9


Estado 4

    3 decl-list: var-decl .

    $padrão  reduzir usando a regra 3 (decl-list)


Estado 5

    5 decl-list: func .

    $padrão  reduzir usando a regra 5 (decl-list)


Estado 6

    6 var-decl: TYPE ID . ';'
    8 func: TYPE ID . $@1 '(' params ')' comp-stmt

    ';'  deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 7 ($@1)

    $@1  ir ao estado 11


Estado 7

    0 $accept: prog $end .

    $padrão  aceitar


Estado 8

    2 decl-list: decl-list var-decl .

    $padrão  reduzir usando a regra 2 (decl-list)


Estado 9

    4 decl-list: decl-list func .

    $padrão  reduzir usando a regra 4 (decl-list)


Estado 10

    6 var-decl: TYPE ID ';' .

    $padrão  reduzir usando a regra 6 (var-decl)


Estado 11

    8 func: TYPE ID $@1 . '(' params ')' comp-stmt

    '('  deslocar, e ir ao estado 12


Estado 12

    8 func: TYPE ID $@1 '(' . params ')' comp-stmt

    TYPE  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 11 (params)

    params  ir ao estado 14


Estado 13

   10 params: TYPE . ID

    ID  deslocar, e ir ao estado 15


Estado 14

    8 func: TYPE ID $@1 '(' params . ')' comp-stmt
    9 params: params . ',' TYPE ID

    ')'  deslocar, e ir ao estado 16
    ','  deslocar, e ir ao estado 17


Estado 15

   10 params: TYPE ID .

    $padrão  reduzir usando a regra 10 (params)


Estado 16

    8 func: TYPE ID $@1 '(' params ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 19


Estado 17

    9 params: params ',' . TYPE ID

    TYPE  deslocar, e ir ao estado 20


Estado 18

   12 comp-stmt: '{' . local-decl stmt-list '}'

    $padrão  reduzir usando a regra 14 (local-decl)

    local-decl  ir ao estado 21


Estado 19

    8 func: TYPE ID $@1 '(' params ')' comp-stmt .

    $padrão  reduzir usando a regra 8 (func)


Estado 20

    9 params: params ',' TYPE . ID

    ID  deslocar, e ir ao estado 22


Estado 21

   12 comp-stmt: '{' local-decl . stmt-list '}'
   13 local-decl: local-decl . TYPE ID ';'

    TYPE  deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 16 (stmt-list)

    stmt-list  ir ao estado 24


Estado 22

    9 params: params ',' TYPE ID .

    $padrão  reduzir usando a regra 9 (params)


Estado 23

   13 local-decl: local-decl TYPE . ID ';'

    ID  deslocar, e ir ao estado 25


Estado 24

   12 comp-stmt: '{' local-decl stmt-list . '}'
   15 stmt-list: stmt-list . stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    IF         deslocar, e ir ao estado 30
    WHILE      deslocar, e ir ao estado 31
    RETURN     deslocar, e ir ao estado 32
    PRINT      deslocar, e ir ao estado 33
    SCAN       deslocar, e ir ao estado 34
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41
    '}'        deslocar, e ir ao estado 42

    stmt              ir ao estado 43
    expr              ir ao estado 44
    simple-expr       ir ao estado 45
    conditional-stmt  ir ao estado 46
    iteration-stmt    ir ao estado 47
    return-stmt       ir ao estado 48
    var               ir ao estado 49
    op-expr           ir ao estado 50
    op-log            ir ao estado 51
    term              ir ao estado 52
    call              ir ao estado 53


Estado 25

   13 local-decl: local-decl TYPE ID . ';'

    ';'  deslocar, e ir ao estado 54


Estado 26

   43 term: INT .

    $padrão  reduzir usando a regra 43 (term)


Estado 27

   44 term: FLOAT .

    $padrão  reduzir usando a regra 44 (term)


Estado 28

   38 op-log: BOOL .

    $padrão  reduzir usando a regra 38 (op-log)


Estado 29

   34 var: ID .
   45 call: ID . '(' args ')'

    '('  deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 34 (var)


Estado 30

   29 conditional-stmt: IF . '(' simple-expr ')' comp-stmt
   30                 | IF . '(' simple-expr ')' comp-stmt ELSE comp-stmt

    '('  deslocar, e ir ao estado 56


Estado 31

   31 iteration-stmt: WHILE . '(' simple-expr ')' comp-stmt

    '('  deslocar, e ir ao estado 57


Estado 32

   32 return-stmt: RETURN . simple-expr ';'
   33            | RETURN . ';'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    ';'        deslocar, e ir ao estado 58
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 59
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 33

   21 stmt: PRINT . '(' QUOTES string QUOTES ')' ';'
   22     | PRINT . '(' var ')' ';'

    '('  deslocar, e ir ao estado 61


Estado 34

   23 stmt: SCAN . '(' var ')' ';'

    '('  deslocar, e ir ao estado 62


Estado 35

   49 call: STRUPPER . '(' args ')'

    '('  deslocar, e ir ao estado 63


Estado 36

   50 call: STRLOWER . '(' args ')'

    '('  deslocar, e ir ao estado 64


Estado 37

   46 call: STRCONCAT . '(' args ')'

    '('  deslocar, e ir ao estado 65


Estado 38

   47 call: STRCOPY . '(' args ')'

    '('  deslocar, e ir ao estado 66


Estado 39

   48 call: STRINSERT . '(' args ')'

    '('  deslocar, e ir ao estado 67


Estado 40

   42 term: QUOTES . string QUOTES

    $padrão  reduzir usando a regra 56 (string)

    string  ir ao estado 68


Estado 41

   39 term: '(' . simple-expr ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 69
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 42

   12 comp-stmt: '{' local-decl stmt-list '}' .

    $padrão  reduzir usando a regra 12 (comp-stmt)


Estado 43

   15 stmt-list: stmt-list stmt .

    $padrão  reduzir usando a regra 15 (stmt-list)


Estado 44

   17 stmt: expr .

    $padrão  reduzir usando a regra 17 (stmt)


Estado 45

   25 expr: simple-expr . ';'

    ';'  deslocar, e ir ao estado 70


Estado 46

   18 stmt: conditional-stmt .

    $padrão  reduzir usando a regra 18 (stmt)


Estado 47

   19 stmt: iteration-stmt .

    $padrão  reduzir usando a regra 19 (stmt)


Estado 48

   20 stmt: return-stmt .

    $padrão  reduzir usando a regra 20 (stmt)


Estado 49

   24 expr: var . ASSIGN expr
   40 term: var .

    ASSIGN  deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 40 (term)


Estado 50

   26 simple-expr: op-expr . RELOP op-expr
   27            | op-expr .
   35 op-expr: op-expr . OP term

    OP     deslocar, e ir ao estado 72
    RELOP  deslocar, e ir ao estado 73

    $padrão  reduzir usando a regra 27 (simple-expr)


Estado 51

   28 simple-expr: op-log .
   37 op-log: op-log . LOG term

    LOG  deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 28 (simple-expr)


Estado 52

   36 op-expr: term .

    $padrão  reduzir usando a regra 36 (op-expr)


Estado 53

   41 term: call .

    $padrão  reduzir usando a regra 41 (term)


Estado 54

   13 local-decl: local-decl TYPE ID ';' .

    $padrão  reduzir usando a regra 13 (local-decl)


Estado 55

   45 call: ID '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 76
    arg-list     ir ao estado 77


Estado 56

   29 conditional-stmt: IF '(' . simple-expr ')' comp-stmt
   30                 | IF '(' . simple-expr ')' comp-stmt ELSE comp-stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 78
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 57

   31 iteration-stmt: WHILE '(' . simple-expr ')' comp-stmt

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 79
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 58

   33 return-stmt: RETURN ';' .

    $padrão  reduzir usando a regra 33 (return-stmt)


Estado 59

   32 return-stmt: RETURN simple-expr . ';'

    ';'  deslocar, e ir ao estado 80


Estado 60

   40 term: var .

    $padrão  reduzir usando a regra 40 (term)


Estado 61

   21 stmt: PRINT '(' . QUOTES string QUOTES ')' ';'
   22     | PRINT '(' . var ')' ';'

    ID      deslocar, e ir ao estado 81
    QUOTES  deslocar, e ir ao estado 82

    var  ir ao estado 83


Estado 62

   23 stmt: SCAN '(' . var ')' ';'

    ID  deslocar, e ir ao estado 81

    var  ir ao estado 84


Estado 63

   49 call: STRUPPER '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 85
    arg-list     ir ao estado 77


Estado 64

   50 call: STRLOWER '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 86
    arg-list     ir ao estado 77


Estado 65

   46 call: STRCONCAT '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 87
    arg-list     ir ao estado 77


Estado 66

   47 call: STRCOPY '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 88
    arg-list     ir ao estado 77


Estado 67

   48 call: STRINSERT '(' . args ')'

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 52 (args)

    simple-expr  ir ao estado 75
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53
    args         ir ao estado 89
    arg-list     ir ao estado 77


Estado 68

   42 term: QUOTES string . QUOTES
   55 string: string . STR

    STR     deslocar, e ir ao estado 90
    QUOTES  deslocar, e ir ao estado 91


Estado 69

   39 term: '(' simple-expr . ')'

    ')'  deslocar, e ir ao estado 92


Estado 70

   25 expr: simple-expr ';' .

    $padrão  reduzir usando a regra 25 (expr)


Estado 71

   24 expr: var ASSIGN . expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    expr         ir ao estado 93
    simple-expr  ir ao estado 45
    var          ir ao estado 49
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 72

   35 op-expr: op-expr OP . term

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var   ir ao estado 60
    term  ir ao estado 94
    call  ir ao estado 53


Estado 73

   26 simple-expr: op-expr RELOP . op-expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var      ir ao estado 60
    op-expr  ir ao estado 95
    term     ir ao estado 52
    call     ir ao estado 53


Estado 74

   37 op-log: op-log LOG . term

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    var   ir ao estado 60
    term  ir ao estado 96
    call  ir ao estado 53


Estado 75

   54 arg-list: simple-expr .

    $padrão  reduzir usando a regra 54 (arg-list)


Estado 76

   45 call: ID '(' args . ')'

    ')'  deslocar, e ir ao estado 97


Estado 77

   51 args: arg-list .
   53 arg-list: arg-list . ',' simple-expr

    ','  deslocar, e ir ao estado 98

    $padrão  reduzir usando a regra 51 (args)


Estado 78

   29 conditional-stmt: IF '(' simple-expr . ')' comp-stmt
   30                 | IF '(' simple-expr . ')' comp-stmt ELSE comp-stmt

    ')'  deslocar, e ir ao estado 99


Estado 79

   31 iteration-stmt: WHILE '(' simple-expr . ')' comp-stmt

    ')'  deslocar, e ir ao estado 100


Estado 80

   32 return-stmt: RETURN simple-expr ';' .

    $padrão  reduzir usando a regra 32 (return-stmt)


Estado 81

   34 var: ID .

    $padrão  reduzir usando a regra 34 (var)


Estado 82

   21 stmt: PRINT '(' QUOTES . string QUOTES ')' ';'

    $padrão  reduzir usando a regra 56 (string)

    string  ir ao estado 101


Estado 83

   22 stmt: PRINT '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 102


Estado 84

   23 stmt: SCAN '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 103


Estado 85

   49 call: STRUPPER '(' args . ')'

    ')'  deslocar, e ir ao estado 104


Estado 86

   50 call: STRLOWER '(' args . ')'

    ')'  deslocar, e ir ao estado 105


Estado 87

   46 call: STRCONCAT '(' args . ')'

    ')'  deslocar, e ir ao estado 106


Estado 88

   47 call: STRCOPY '(' args . ')'

    ')'  deslocar, e ir ao estado 107


Estado 89

   48 call: STRINSERT '(' args . ')'

    ')'  deslocar, e ir ao estado 108


Estado 90

   55 string: string STR .

    $padrão  reduzir usando a regra 55 (string)


Estado 91

   42 term: QUOTES string QUOTES .

    $padrão  reduzir usando a regra 42 (term)


Estado 92

   39 term: '(' simple-expr ')' .

    $padrão  reduzir usando a regra 39 (term)


Estado 93

   24 expr: var ASSIGN expr .

    $padrão  reduzir usando a regra 24 (expr)


Estado 94

   35 op-expr: op-expr OP term .

    $padrão  reduzir usando a regra 35 (op-expr)


Estado 95

   26 simple-expr: op-expr RELOP op-expr .
   35 op-expr: op-expr . OP term

    OP  deslocar, e ir ao estado 72

    $padrão  reduzir usando a regra 26 (simple-expr)


Estado 96

   37 op-log: op-log LOG term .

    $padrão  reduzir usando a regra 37 (op-log)


Estado 97

   45 call: ID '(' args ')' .

    $padrão  reduzir usando a regra 45 (call)


Estado 98

   53 arg-list: arg-list ',' . simple-expr

    INT        deslocar, e ir ao estado 26
    FLOAT      deslocar, e ir ao estado 27
    BOOL       deslocar, e ir ao estado 28
    ID         deslocar, e ir ao estado 29
    STRUPPER   deslocar, e ir ao estado 35
    STRLOWER   deslocar, e ir ao estado 36
    STRCONCAT  deslocar, e ir ao estado 37
    STRCOPY    deslocar, e ir ao estado 38
    STRINSERT  deslocar, e ir ao estado 39
    QUOTES     deslocar, e ir ao estado 40
    '('        deslocar, e ir ao estado 41

    simple-expr  ir ao estado 109
    var          ir ao estado 60
    op-expr      ir ao estado 50
    op-log       ir ao estado 51
    term         ir ao estado 52
    call         ir ao estado 53


Estado 99

   29 conditional-stmt: IF '(' simple-expr ')' . comp-stmt
   30                 | IF '(' simple-expr ')' . comp-stmt ELSE comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 110


Estado 100

   31 iteration-stmt: WHILE '(' simple-expr ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 111


Estado 101

   21 stmt: PRINT '(' QUOTES string . QUOTES ')' ';'
   55 string: string . STR

    STR     deslocar, e ir ao estado 90
    QUOTES  deslocar, e ir ao estado 112


Estado 102

   22 stmt: PRINT '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 113


Estado 103

   23 stmt: SCAN '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 114


Estado 104

   49 call: STRUPPER '(' args ')' .

    $padrão  reduzir usando a regra 49 (call)


Estado 105

   50 call: STRLOWER '(' args ')' .

    $padrão  reduzir usando a regra 50 (call)


Estado 106

   46 call: STRCONCAT '(' args ')' .

    $padrão  reduzir usando a regra 46 (call)


Estado 107

   47 call: STRCOPY '(' args ')' .

    $padrão  reduzir usando a regra 47 (call)


Estado 108

   48 call: STRINSERT '(' args ')' .

    $padrão  reduzir usando a regra 48 (call)


Estado 109

   53 arg-list: arg-list ',' simple-expr .

    $padrão  reduzir usando a regra 53 (arg-list)


Estado 110

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt .
   30                 | IF '(' simple-expr ')' comp-stmt . ELSE comp-stmt

    ELSE  deslocar, e ir ao estado 115

    $padrão  reduzir usando a regra 29 (conditional-stmt)


Estado 111

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt .

    $padrão  reduzir usando a regra 31 (iteration-stmt)


Estado 112

   21 stmt: PRINT '(' QUOTES string QUOTES . ')' ';'

    ')'  deslocar, e ir ao estado 116


Estado 113

   22 stmt: PRINT '(' var ')' ';' .

    $padrão  reduzir usando a regra 22 (stmt)


Estado 114

   23 stmt: SCAN '(' var ')' ';' .

    $padrão  reduzir usando a regra 23 (stmt)


Estado 115

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 117


Estado 116

   21 stmt: PRINT '(' QUOTES string QUOTES ')' . ';'

    ';'  deslocar, e ir ao estado 118


Estado 117

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt .

    $padrão  reduzir usando a regra 30 (conditional-stmt)


Estado 118

   21 stmt: PRINT '(' QUOTES string QUOTES ')' ';' .

    $padrão  reduzir usando a regra 21 (stmt)
