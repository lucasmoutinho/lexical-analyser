Gramática

    0 $accept: prog $end

    1 prog: decl-list

    2 decl-list: decl-list var-decl
    3          | var-decl
    4          | decl-list func
    5          | func

    6 var-decl: TYPE ID ';'

    7 $@1: %empty

    8 func: TYPE ID $@1 '(' params ')' comp-stmt

    9 params: params ',' TYPE ID
   10       | TYPE ID
   11       | %empty

   12 comp-stmt: '{' local-decl stmt-list '}'

   13 local-decl: local-decl TYPE ID ';'
   14           | %empty

   15 stmt-list: stmt-list stmt
   16          | %empty

   17 stmt: expr
   18     | conditional-stmt
   19     | iteration-stmt
   20     | return-stmt
   21     | PRINT '(' QUOTES string QUOTES ')' ';'
   22     | PRINT '(' var ')' ';'
   23     | SCAN '(' var ')' ';'

   24 expr: var ASSIGN expr
   25     | simple-expr ';'

   26 simple-expr: op-expr RELOP op-expr
   27            | op-expr
   28            | op-log

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt
   30                 | IF '(' simple-expr ')' comp-stmt ELSE comp-stmt

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt

   32 return-stmt: RETURN simple-expr ';'
   33            | RETURN ';'

   34 var: ID

   35 op-expr: op-expr OP term
   36        | term

   37 op-log: op-log LOG term
   38       | BOOL

   39 term: '(' simple-expr ')'
   40     | var
   41     | call
   42     | QUOTES string QUOTES
   43     | INT
   44     | FLOAT

   45 call: ID '(' args ')'
   46     | STRCONCAT '(' args ')'
   47     | STRCOMPARE '(' args ')'
   48     | STRCOPY '(' args ')'
   49     | STRINSERT '(' args ')'
   50     | STRUPPER '(' args ')'
   51     | STRLOWER '(' args ')'

   52 args: arg-list
   53     | %empty

   54 arg-list: arg-list ',' simple-expr
   55         | simple-expr

   56 string: string STR
   57       | %empty


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 8 21 22 23 29 30 31 39 45 46 47 48 49 50 51
')' (41) 8 21 22 23 29 30 31 39 45 46 47 48 49 50 51
',' (44) 9 54
';' (59) 6 13 21 22 23 25 32 33
'{' (123) 12
'}' (125) 12
error (256)
INT (258) 43
FLOAT (259) 44
BOOL (260) 38
STR (261) 56
TYPE (262) 6 8 9 10 13
ID (263) 6 8 9 10 13 34 45
IF (264) 29 30
ELSE (265) 30
WHILE (266) 31
RETURN (267) 32 33
PRINT (268) 21 22
SCAN (269) 23
STRUPPER (270) 50
STRLOWER (271) 51
STRCONCAT (272) 46
STRCOMPARE (273) 47
STRCOPY (274) 48
STRINSERT (275) 49
QUOTES (276) 21 42
ASSIGN (277) 24
OP (278) 35
RELOP (279) 26
LOG (280) 37


Não terminais com as regras onde eles aparecem

$accept (32)
    à esquerda: 0
prog (33)
    à esquerda: 1, à direita: 0
decl-list (34)
    à esquerda: 2 3 4 5, à direita: 1 2 4
var-decl (35)
    à esquerda: 6, à direita: 2 3
func (36)
    à esquerda: 8, à direita: 4 5
$@1 (37)
    à esquerda: 7, à direita: 8
params (38)
    à esquerda: 9 10 11, à direita: 8 9
comp-stmt (39)
    à esquerda: 12, à direita: 8 29 30 31
local-decl (40)
    à esquerda: 13 14, à direita: 12 13
stmt-list (41)
    à esquerda: 15 16, à direita: 12 15
stmt (42)
    à esquerda: 17 18 19 20 21 22 23, à direita: 15
expr (43)
    à esquerda: 24 25, à direita: 17 24
simple-expr (44)
    à esquerda: 26 27 28, à direita: 25 29 30 31 32 39 54 55
conditional-stmt (45)
    à esquerda: 29 30, à direita: 18
iteration-stmt (46)
    à esquerda: 31, à direita: 19
return-stmt (47)
    à esquerda: 32 33, à direita: 20
var (48)
    à esquerda: 34, à direita: 22 23 24 40
op-expr (49)
    à esquerda: 35 36, à direita: 26 27 35
op-log (50)
    à esquerda: 37 38, à direita: 28 37
term (51)
    à esquerda: 39 40 41 42 43 44, à direita: 35 36 37
call (52)
    à esquerda: 45 46 47 48 49 50 51, à direita: 41
args (53)
    à esquerda: 52 53, à direita: 45 46 47 48 49 50 51
arg-list (54)
    à esquerda: 54 55, à direita: 52 54
string (55)
    à esquerda: 56 57, à direita: 21 42 56


Estado 0

    0 $accept: . prog $end

    TYPE  deslocar, e ir ao estado 1

    prog       ir ao estado 2
    decl-list  ir ao estado 3
    var-decl   ir ao estado 4
    func       ir ao estado 5


Estado 1

    6 var-decl: TYPE . ID ';'
    8 func: TYPE . ID $@1 '(' params ')' comp-stmt

    ID  deslocar, e ir ao estado 6


Estado 2

    0 $accept: prog . $end

    $end  deslocar, e ir ao estado 7


Estado 3

    1 prog: decl-list .
    2 decl-list: decl-list . var-decl
    4          | decl-list . func

    TYPE  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 1 (prog)

    var-decl  ir ao estado 8
    func      ir ao estado 9


Estado 4

    3 decl-list: var-decl .

    $padrão  reduzir usando a regra 3 (decl-list)


Estado 5

    5 decl-list: func .

    $padrão  reduzir usando a regra 5 (decl-list)


Estado 6

    6 var-decl: TYPE ID . ';'
    8 func: TYPE ID . $@1 '(' params ')' comp-stmt

    ';'  deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 7 ($@1)

    $@1  ir ao estado 11


Estado 7

    0 $accept: prog $end .

    $padrão  aceitar


Estado 8

    2 decl-list: decl-list var-decl .

    $padrão  reduzir usando a regra 2 (decl-list)


Estado 9

    4 decl-list: decl-list func .

    $padrão  reduzir usando a regra 4 (decl-list)


Estado 10

    6 var-decl: TYPE ID ';' .

    $padrão  reduzir usando a regra 6 (var-decl)


Estado 11

    8 func: TYPE ID $@1 . '(' params ')' comp-stmt

    '('  deslocar, e ir ao estado 12


Estado 12

    8 func: TYPE ID $@1 '(' . params ')' comp-stmt

    TYPE  deslocar, e ir ao estado 13

    $padrão  reduzir usando a regra 11 (params)

    params  ir ao estado 14


Estado 13

   10 params: TYPE . ID

    ID  deslocar, e ir ao estado 15


Estado 14

    8 func: TYPE ID $@1 '(' params . ')' comp-stmt
    9 params: params . ',' TYPE ID

    ')'  deslocar, e ir ao estado 16
    ','  deslocar, e ir ao estado 17


Estado 15

   10 params: TYPE ID .

    $padrão  reduzir usando a regra 10 (params)


Estado 16

    8 func: TYPE ID $@1 '(' params ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 19


Estado 17

    9 params: params ',' . TYPE ID

    TYPE  deslocar, e ir ao estado 20


Estado 18

   12 comp-stmt: '{' . local-decl stmt-list '}'

    $padrão  reduzir usando a regra 14 (local-decl)

    local-decl  ir ao estado 21


Estado 19

    8 func: TYPE ID $@1 '(' params ')' comp-stmt .

    $padrão  reduzir usando a regra 8 (func)


Estado 20

    9 params: params ',' TYPE . ID

    ID  deslocar, e ir ao estado 22


Estado 21

   12 comp-stmt: '{' local-decl . stmt-list '}'
   13 local-decl: local-decl . TYPE ID ';'

    TYPE  deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 16 (stmt-list)

    stmt-list  ir ao estado 24


Estado 22

    9 params: params ',' TYPE ID .

    $padrão  reduzir usando a regra 9 (params)


Estado 23

   13 local-decl: local-decl TYPE . ID ';'

    ID  deslocar, e ir ao estado 25


Estado 24

   12 comp-stmt: '{' local-decl stmt-list . '}'
   15 stmt-list: stmt-list . stmt

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    IF          deslocar, e ir ao estado 30
    WHILE       deslocar, e ir ao estado 31
    RETURN      deslocar, e ir ao estado 32
    PRINT       deslocar, e ir ao estado 33
    SCAN        deslocar, e ir ao estado 34
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42
    '}'         deslocar, e ir ao estado 43

    stmt              ir ao estado 44
    expr              ir ao estado 45
    simple-expr       ir ao estado 46
    conditional-stmt  ir ao estado 47
    iteration-stmt    ir ao estado 48
    return-stmt       ir ao estado 49
    var               ir ao estado 50
    op-expr           ir ao estado 51
    op-log            ir ao estado 52
    term              ir ao estado 53
    call              ir ao estado 54


Estado 25

   13 local-decl: local-decl TYPE ID . ';'

    ';'  deslocar, e ir ao estado 55


Estado 26

   43 term: INT .

    $padrão  reduzir usando a regra 43 (term)


Estado 27

   44 term: FLOAT .

    $padrão  reduzir usando a regra 44 (term)


Estado 28

   38 op-log: BOOL .

    $padrão  reduzir usando a regra 38 (op-log)


Estado 29

   34 var: ID .
   45 call: ID . '(' args ')'

    '('  deslocar, e ir ao estado 56

    $padrão  reduzir usando a regra 34 (var)


Estado 30

   29 conditional-stmt: IF . '(' simple-expr ')' comp-stmt
   30                 | IF . '(' simple-expr ')' comp-stmt ELSE comp-stmt

    '('  deslocar, e ir ao estado 57


Estado 31

   31 iteration-stmt: WHILE . '(' simple-expr ')' comp-stmt

    '('  deslocar, e ir ao estado 58


Estado 32

   32 return-stmt: RETURN . simple-expr ';'
   33            | RETURN . ';'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    ';'         deslocar, e ir ao estado 59
    '('         deslocar, e ir ao estado 42

    simple-expr  ir ao estado 60
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 33

   21 stmt: PRINT . '(' QUOTES string QUOTES ')' ';'
   22     | PRINT . '(' var ')' ';'

    '('  deslocar, e ir ao estado 62


Estado 34

   23 stmt: SCAN . '(' var ')' ';'

    '('  deslocar, e ir ao estado 63


Estado 35

   50 call: STRUPPER . '(' args ')'

    '('  deslocar, e ir ao estado 64


Estado 36

   51 call: STRLOWER . '(' args ')'

    '('  deslocar, e ir ao estado 65


Estado 37

   46 call: STRCONCAT . '(' args ')'

    '('  deslocar, e ir ao estado 66


Estado 38

   47 call: STRCOMPARE . '(' args ')'

    '('  deslocar, e ir ao estado 67


Estado 39

   48 call: STRCOPY . '(' args ')'

    '('  deslocar, e ir ao estado 68


Estado 40

   49 call: STRINSERT . '(' args ')'

    '('  deslocar, e ir ao estado 69


Estado 41

   42 term: QUOTES . string QUOTES

    $padrão  reduzir usando a regra 57 (string)

    string  ir ao estado 70


Estado 42

   39 term: '(' . simple-expr ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    simple-expr  ir ao estado 71
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 43

   12 comp-stmt: '{' local-decl stmt-list '}' .

    $padrão  reduzir usando a regra 12 (comp-stmt)


Estado 44

   15 stmt-list: stmt-list stmt .

    $padrão  reduzir usando a regra 15 (stmt-list)


Estado 45

   17 stmt: expr .

    $padrão  reduzir usando a regra 17 (stmt)


Estado 46

   25 expr: simple-expr . ';'

    ';'  deslocar, e ir ao estado 72


Estado 47

   18 stmt: conditional-stmt .

    $padrão  reduzir usando a regra 18 (stmt)


Estado 48

   19 stmt: iteration-stmt .

    $padrão  reduzir usando a regra 19 (stmt)


Estado 49

   20 stmt: return-stmt .

    $padrão  reduzir usando a regra 20 (stmt)


Estado 50

   24 expr: var . ASSIGN expr
   40 term: var .

    ASSIGN  deslocar, e ir ao estado 73

    $padrão  reduzir usando a regra 40 (term)


Estado 51

   26 simple-expr: op-expr . RELOP op-expr
   27            | op-expr .
   35 op-expr: op-expr . OP term

    OP     deslocar, e ir ao estado 74
    RELOP  deslocar, e ir ao estado 75

    $padrão  reduzir usando a regra 27 (simple-expr)


Estado 52

   28 simple-expr: op-log .
   37 op-log: op-log . LOG term

    LOG  deslocar, e ir ao estado 76

    $padrão  reduzir usando a regra 28 (simple-expr)


Estado 53

   36 op-expr: term .

    $padrão  reduzir usando a regra 36 (op-expr)


Estado 54

   41 term: call .

    $padrão  reduzir usando a regra 41 (term)


Estado 55

   13 local-decl: local-decl TYPE ID ';' .

    $padrão  reduzir usando a regra 13 (local-decl)


Estado 56

   45 call: ID '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 78
    arg-list     ir ao estado 79


Estado 57

   29 conditional-stmt: IF '(' . simple-expr ')' comp-stmt
   30                 | IF '(' . simple-expr ')' comp-stmt ELSE comp-stmt

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    simple-expr  ir ao estado 80
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 58

   31 iteration-stmt: WHILE '(' . simple-expr ')' comp-stmt

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    simple-expr  ir ao estado 81
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 59

   33 return-stmt: RETURN ';' .

    $padrão  reduzir usando a regra 33 (return-stmt)


Estado 60

   32 return-stmt: RETURN simple-expr . ';'

    ';'  deslocar, e ir ao estado 82


Estado 61

   40 term: var .

    $padrão  reduzir usando a regra 40 (term)


Estado 62

   21 stmt: PRINT '(' . QUOTES string QUOTES ')' ';'
   22     | PRINT '(' . var ')' ';'

    ID      deslocar, e ir ao estado 83
    QUOTES  deslocar, e ir ao estado 84

    var  ir ao estado 85


Estado 63

   23 stmt: SCAN '(' . var ')' ';'

    ID  deslocar, e ir ao estado 83

    var  ir ao estado 86


Estado 64

   50 call: STRUPPER '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 87
    arg-list     ir ao estado 79


Estado 65

   51 call: STRLOWER '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 88
    arg-list     ir ao estado 79


Estado 66

   46 call: STRCONCAT '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 89
    arg-list     ir ao estado 79


Estado 67

   47 call: STRCOMPARE '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 90
    arg-list     ir ao estado 79


Estado 68

   48 call: STRCOPY '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 91
    arg-list     ir ao estado 79


Estado 69

   49 call: STRINSERT '(' . args ')'

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    $padrão  reduzir usando a regra 53 (args)

    simple-expr  ir ao estado 77
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54
    args         ir ao estado 92
    arg-list     ir ao estado 79


Estado 70

   42 term: QUOTES string . QUOTES
   56 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 94


Estado 71

   39 term: '(' simple-expr . ')'

    ')'  deslocar, e ir ao estado 95


Estado 72

   25 expr: simple-expr ';' .

    $padrão  reduzir usando a regra 25 (expr)


Estado 73

   24 expr: var ASSIGN . expr

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    expr         ir ao estado 96
    simple-expr  ir ao estado 46
    var          ir ao estado 50
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 74

   35 op-expr: op-expr OP . term

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    var   ir ao estado 61
    term  ir ao estado 97
    call  ir ao estado 54


Estado 75

   26 simple-expr: op-expr RELOP . op-expr

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    var      ir ao estado 61
    op-expr  ir ao estado 98
    term     ir ao estado 53
    call     ir ao estado 54


Estado 76

   37 op-log: op-log LOG . term

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    var   ir ao estado 61
    term  ir ao estado 99
    call  ir ao estado 54


Estado 77

   55 arg-list: simple-expr .

    $padrão  reduzir usando a regra 55 (arg-list)


Estado 78

   45 call: ID '(' args . ')'

    ')'  deslocar, e ir ao estado 100


Estado 79

   52 args: arg-list .
   54 arg-list: arg-list . ',' simple-expr

    ','  deslocar, e ir ao estado 101

    $padrão  reduzir usando a regra 52 (args)


Estado 80

   29 conditional-stmt: IF '(' simple-expr . ')' comp-stmt
   30                 | IF '(' simple-expr . ')' comp-stmt ELSE comp-stmt

    ')'  deslocar, e ir ao estado 102


Estado 81

   31 iteration-stmt: WHILE '(' simple-expr . ')' comp-stmt

    ')'  deslocar, e ir ao estado 103


Estado 82

   32 return-stmt: RETURN simple-expr ';' .

    $padrão  reduzir usando a regra 32 (return-stmt)


Estado 83

   34 var: ID .

    $padrão  reduzir usando a regra 34 (var)


Estado 84

   21 stmt: PRINT '(' QUOTES . string QUOTES ')' ';'

    $padrão  reduzir usando a regra 57 (string)

    string  ir ao estado 104


Estado 85

   22 stmt: PRINT '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 105


Estado 86

   23 stmt: SCAN '(' var . ')' ';'

    ')'  deslocar, e ir ao estado 106


Estado 87

   50 call: STRUPPER '(' args . ')'

    ')'  deslocar, e ir ao estado 107


Estado 88

   51 call: STRLOWER '(' args . ')'

    ')'  deslocar, e ir ao estado 108


Estado 89

   46 call: STRCONCAT '(' args . ')'

    ')'  deslocar, e ir ao estado 109


Estado 90

   47 call: STRCOMPARE '(' args . ')'

    ')'  deslocar, e ir ao estado 110


Estado 91

   48 call: STRCOPY '(' args . ')'

    ')'  deslocar, e ir ao estado 111


Estado 92

   49 call: STRINSERT '(' args . ')'

    ')'  deslocar, e ir ao estado 112


Estado 93

   56 string: string STR .

    $padrão  reduzir usando a regra 56 (string)


Estado 94

   42 term: QUOTES string QUOTES .

    $padrão  reduzir usando a regra 42 (term)


Estado 95

   39 term: '(' simple-expr ')' .

    $padrão  reduzir usando a regra 39 (term)


Estado 96

   24 expr: var ASSIGN expr .

    $padrão  reduzir usando a regra 24 (expr)


Estado 97

   35 op-expr: op-expr OP term .

    $padrão  reduzir usando a regra 35 (op-expr)


Estado 98

   26 simple-expr: op-expr RELOP op-expr .
   35 op-expr: op-expr . OP term

    OP  deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 26 (simple-expr)


Estado 99

   37 op-log: op-log LOG term .

    $padrão  reduzir usando a regra 37 (op-log)


Estado 100

   45 call: ID '(' args ')' .

    $padrão  reduzir usando a regra 45 (call)


Estado 101

   54 arg-list: arg-list ',' . simple-expr

    INT         deslocar, e ir ao estado 26
    FLOAT       deslocar, e ir ao estado 27
    BOOL        deslocar, e ir ao estado 28
    ID          deslocar, e ir ao estado 29
    STRUPPER    deslocar, e ir ao estado 35
    STRLOWER    deslocar, e ir ao estado 36
    STRCONCAT   deslocar, e ir ao estado 37
    STRCOMPARE  deslocar, e ir ao estado 38
    STRCOPY     deslocar, e ir ao estado 39
    STRINSERT   deslocar, e ir ao estado 40
    QUOTES      deslocar, e ir ao estado 41
    '('         deslocar, e ir ao estado 42

    simple-expr  ir ao estado 113
    var          ir ao estado 61
    op-expr      ir ao estado 51
    op-log       ir ao estado 52
    term         ir ao estado 53
    call         ir ao estado 54


Estado 102

   29 conditional-stmt: IF '(' simple-expr ')' . comp-stmt
   30                 | IF '(' simple-expr ')' . comp-stmt ELSE comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 114


Estado 103

   31 iteration-stmt: WHILE '(' simple-expr ')' . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 115


Estado 104

   21 stmt: PRINT '(' QUOTES string . QUOTES ')' ';'
   56 string: string . STR

    STR     deslocar, e ir ao estado 93
    QUOTES  deslocar, e ir ao estado 116


Estado 105

   22 stmt: PRINT '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 117


Estado 106

   23 stmt: SCAN '(' var ')' . ';'

    ';'  deslocar, e ir ao estado 118


Estado 107

   50 call: STRUPPER '(' args ')' .

    $padrão  reduzir usando a regra 50 (call)


Estado 108

   51 call: STRLOWER '(' args ')' .

    $padrão  reduzir usando a regra 51 (call)


Estado 109

   46 call: STRCONCAT '(' args ')' .

    $padrão  reduzir usando a regra 46 (call)


Estado 110

   47 call: STRCOMPARE '(' args ')' .

    $padrão  reduzir usando a regra 47 (call)


Estado 111

   48 call: STRCOPY '(' args ')' .

    $padrão  reduzir usando a regra 48 (call)


Estado 112

   49 call: STRINSERT '(' args ')' .

    $padrão  reduzir usando a regra 49 (call)


Estado 113

   54 arg-list: arg-list ',' simple-expr .

    $padrão  reduzir usando a regra 54 (arg-list)


Estado 114

   29 conditional-stmt: IF '(' simple-expr ')' comp-stmt .
   30                 | IF '(' simple-expr ')' comp-stmt . ELSE comp-stmt

    ELSE  deslocar, e ir ao estado 119

    $padrão  reduzir usando a regra 29 (conditional-stmt)


Estado 115

   31 iteration-stmt: WHILE '(' simple-expr ')' comp-stmt .

    $padrão  reduzir usando a regra 31 (iteration-stmt)


Estado 116

   21 stmt: PRINT '(' QUOTES string QUOTES . ')' ';'

    ')'  deslocar, e ir ao estado 120


Estado 117

   22 stmt: PRINT '(' var ')' ';' .

    $padrão  reduzir usando a regra 22 (stmt)


Estado 118

   23 stmt: SCAN '(' var ')' ';' .

    $padrão  reduzir usando a regra 23 (stmt)


Estado 119

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE . comp-stmt

    '{'  deslocar, e ir ao estado 18

    comp-stmt  ir ao estado 121


Estado 120

   21 stmt: PRINT '(' QUOTES string QUOTES ')' . ';'

    ';'  deslocar, e ir ao estado 122


Estado 121

   30 conditional-stmt: IF '(' simple-expr ')' comp-stmt ELSE comp-stmt .

    $padrão  reduzir usando a regra 30 (conditional-stmt)


Estado 122

   21 stmt: PRINT '(' QUOTES string QUOTES ')' ';' .

    $padrão  reduzir usando a regra 21 (stmt)
